{"version":3,"sources":["webpack:///src/app/authentication/after-confirmation/after-confirmation.component.ts","webpack:///src/app/authentication/after-confirmation/after-confirmation.component.html","webpack:///src/app/authentication/authentication-routing.module.ts","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/change-password/change-password.component.ts","webpack:///src/app/authentication/change-password/change-password.component.html","webpack:///src/app/authentication/contact/contact.component.ts","webpack:///src/app/authentication/contact/contact.component.html","webpack:///src/app/authentication/emailconfirmation/email-confirmation.component.ts","webpack:///src/app/authentication/emailconfirmation/email-confirmation.component.html","webpack:///src/app/authentication/forget-password/forget-password.component.ts","webpack:///src/app/authentication/forget-password/forget-password.component.html","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/login/login.component.html","webpack:///src/app/authentication/partnership/partnership.component.ts","webpack:///src/app/authentication/partnership/partnership.component.html","webpack:///src/app/authentication/refund/refund.component.ts","webpack:///src/app/authentication/refund/refund.component.html","webpack:///src/app/authentication/resetpassword/reset-password.component.ts","webpack:///src/app/authentication/resetpassword/reset-password.component.html","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/helper/custom-validators.ts","webpack:///src/app/landing/airport-park/airport-park.component.ts","webpack:///src/app/landing/airport-park/airport-park.component.html","webpack:///src/app/landing/boat-parking/boat-parking.component.ts","webpack:///src/app/landing/boat-parking/boat-parking.component.html","webpack:///src/app/landing/city-park/city-park.component.ts","webpack:///src/app/landing/city-park/city-park.component.html","webpack:///src/app/landing/helicopter/helicopter.component.ts","webpack:///src/app/landing/helicopter/helicopter.component.html","webpack:///src/app/landing/main/main.component.metadata.ts","webpack:///src/app/landing/sea-plane/sea-plane.component.ts","webpack:///src/app/landing/sea-plane/sea-plane.component.html","webpack:///src/app/landing/semi-truck/semi-truck.component.ts","webpack:///src/app/landing/semi-truck/semi-truck.component.html","webpack:///src/app/landing/truck-parking/truck-parking.component.ts","webpack:///src/app/landing/truck-parking/truck-parking.component.html","webpack:///src/app/model/cart/cart.model.ts","webpack:///src/app/model/emailconfirm/emailconfirm.model.ts","webpack:///src/app/model/login/change_password.model.ts","webpack:///src/app/model/login/forget_password.model.ts","webpack:///src/app/model/login/reset_password.model.ts","webpack:///src/app/model/register/register.model.ts","webpack:///src/app/shared/authentication/register/register.service.ts","webpack:///src/app/shared/search.service.ts"],"names":["AfterConfirmationComponent","selector","templateUrl","styleUrls","routes","path","component","AuthenticationtRoutingModule","forChild","imports","exports","AuthenticationModule","declarations","providers","ChangePasswordComponent","fb","router","loginService","route","submitBtnDisable","formErrors","email","currentPassword","password","passwordConfirmation","passwordGroup","validationMessages","required","minlength","hasNumber","hasCapitalCase","hasSmallCase","hasSpecialCharacters","passwordMismatch","snapshot","paramMap","get","changepasswordConfirm","group","compose","patternValidator","minLength","validator","matchPassword","valueChanges","subscribe","data","logValidationErrors","Object","keys","controls","forEach","key","abstractControl","valid","touched","messages","errorKey","errors","title","buttonsStyling","confirmButtonClass","type","then","result","value","navigate","invalid","changePassword","Email","CurrentPassword","NewPassword","response","showSwal","httpError","error","onSubmit","ContactComponent","userService","dialogService","firstName","lastName","message","phone","pattern","emailUsFormGroup","body","SentFrom","SentMessage","FirstName","LastName","PhoneNumber","EmailUs","reset","options","confirmText","open","confirmed","console","log","sendMessage","EmailConfirmationComponent","registerService","submitted","emailConfirm","confirmEmailForm","queryParams","params","UserId","Token","text","Password","EmailConfirmation","ForgetPasswordComponent","forgetPasswordForm","forgetPassword","ReturnUrl","window","location","origin","LoginComponent","cookieService","authenticationService","cartService","placesService","zone","auth2","grantOfflineAccess","signInCallback","authResult","Code","code","GrantType","externalGoogleLogin","setlocalStorageAndGetCartDetails","returnUrl","slice","indexOf","length","atob","rememberMe","loginForm","status","externalLogin","authResponse","accessToken","FB","login","statusChangeCallback","scope","externalFacebookLogin","setUserValue","cart","cartPropertyGroup","val","index","cartDetails","PropertyGroupID","push","addCart","getCartDetails","run","userLogin","set","btoa","isAuthorized","localStorage","setItem","JSON","stringify","facebookLogin","googleLogin","PartnershipComponent","FromBusiness","RefundComponent","ResetPasswordComponent","resetPassword","resetPasswordForm","passwordControl","confirmPasswordControl","pristine","setErrors","SignupComponent","iAgree","subscribeNewsLetter","maxlength","submitBtnClicked","registerForm","maxLength","requiredTrue","markAsTouched","registerUser","SubscribeToNewsLetter","IAgree","FromClient","RegisterUser","marksAsTouched","openPrivacyNewWindow","openTermsNewWindow","CustomValidators","regex","control","test","AirportParkComponent","http","mapsAPILoader","formBuilder","searchService","ngZone","placeService","Mode","SEARCH_FROM_METADATA","searchAddress","createForm","searchForm","vehicleCategory","setValue","Airport_Parking","initializeAutoComplete","searchBar","vehicleLength","load","geoCoder","google","maps","Geocoder","autocomplete","places","Autocomplete","searchElementRef","nativeElement","addListener","place","getPlace","geometry","undefined","patchValue","formatted_address","currentLocation","lat","lng","i","address_components","addressType","types","componentForm","street_number","locality","administrative_area_level_1","country","search","getCurrentPosition","formatedAddress","mode","Boat","Seaplane","displayLength","modePlaceholder","setValidators","updateValueAndValidity","clearValidators","searchText","street","vehiclelength","navigateByUrl","BoatParkingComponent","CityParkComponent","City_Parking","HelicopterComponent","Helicopter","SeaPlaneComponent","SemiTruckComponent","Semi_Truck","TruckParkingComponent","Truck_And_Trailer","Cart","EmailConfirm","ChangePassword","ForgetPassword","ResetPassword","UserRegister","RegisterService","userRegister","post","register","providedIn","SearchService","_searchText","_selectedPlace","_fromDate","_toDate"],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-after-confirmation',\r\n  templateUrl: './after-confirmation.component.html',\r\n  styleUrls: ['./after-confirmation.component.scss']\r\n})\r\nexport class AfterConfirmationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"login-page-wrapper\">\r\n    <app-nav-bar-new></app-nav-bar-new>\r\n    <div class=\"container py-5\">\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-7 mx-auto px-5 bg-light\" style=\"border-radius: 20px;\">\r\n\r\n                <div class=\"form-card text-center\">\r\n                    <div class=\"form-card-grid\">\r\n                        <h1 class=\"h1 font-weight-bold text-center py-2\" style=\"font-size: 30px;\">Email has been confirmed\r\n                        </h1>\r\n                        <div class=\"form-content\">\r\n                            <a routerLink=\"../changepassword\">You can change the password</a>\r\n                            <br> Or\r\n                            <br>\r\n                            <a routerLink=\"../login\">You can redirect to the login page</a>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>\r\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { AuthGuard } from '../shared/auth.guard';\r\nimport { LoginGuard } from '../shared/login.guard';\r\nimport { EmailConfirmationComponent } from './emailconfirmation/email-confirmation.component';\r\nimport { ResetPasswordComponent } from './resetpassword/reset-password.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { PartnershipComponent } from './partnership/partnership.component';\r\nimport { CityParkComponent } from '../landing/city-park/city-park.component';\r\nimport { AirportParkComponent } from '../landing/airport-park/airport-park.component';\r\nimport { TruckParkingComponent } from '../landing/truck-parking/truck-parking.component';\r\nimport { SemiTruckComponent } from '../landing/semi-truck/semi-truck.component';\r\nimport { BoatParkingComponent } from '../landing/boat-parking/boat-parking.component';\r\nimport { SeaPlaneComponent } from '../landing/sea-plane/sea-plane.component';\r\nimport { HelicopterComponent } from '../landing/helicopter/helicopter.component';\r\nimport { AfterConfirmationComponent } from './after-confirmation/after-confirmation.component';\r\nimport { RefundComponent } from './refund/refund.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  }, {\r\n    path: 'register',\r\n    component: SignupComponent\r\n  },\r\n  {\r\n    path: 'emailconfirm',\r\n    component: EmailConfirmationComponent\r\n  },\r\n  {\r\n    path: 'forgetpassword',\r\n    component: ForgetPasswordComponent\r\n  },\r\n  {\r\n    path: 'resetpassword',\r\n    component: ResetPasswordComponent\r\n  },\r\n  {\r\n    path: 'contact',\r\n    component: ContactComponent\r\n  },\r\n  {\r\n    path: 'city-parking',\r\n    component: CityParkComponent\r\n  },\r\n  {\r\n    path: 'airport-parking',\r\n    component: AirportParkComponent\r\n  },\r\n  {\r\n    path: 'truck-parking',\r\n    component: TruckParkingComponent\r\n  },\r\n  {\r\n    path: 'semi-truck-parking',\r\n    component: SemiTruckComponent\r\n  },\r\n  {\r\n    path: 'boat-parking',\r\n    component: BoatParkingComponent\r\n  },\r\n  {\r\n    path: 'seaplane-parking',\r\n    component: SeaPlaneComponent\r\n  },\r\n  {\r\n    path: 'helicopter-parking',\r\n    component: HelicopterComponent\r\n  },\r\n  {\r\n    path: 'partnerships',\r\n    component: PartnershipComponent\r\n  },\r\n  {\r\n    path: 'refund',\r\n    component: RefundComponent\r\n  },\r\n  {\r\n    path: 'changepassword/:email',\r\n    component: ChangePasswordComponent\r\n  },\r\n  {\r\n    path: 'changepassword',\r\n    component: ChangePasswordComponent\r\n  },\r\n  {\r\n    path: 'afterconfirmation',\r\n    component: AfterConfirmationComponent\r\n  }\r\n\r\n  //  { path: 'login', component: LoginComponent, canActivate: [LoginGuard] },\r\n  // { path: 'signup', component: SignupComponent },\r\n  // { path: 'forget-password', component: ForgetPasswordComponent, canActivate: [LoginGuard] },\r\n  // { path: 'change-password', component: ChangePasswordComponent, canActivate: [AuthGuard] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthenticationtRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AuthenticationtRoutingModule } from './authentication-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { EmailConfirmationComponent } from './emailconfirmation/email-confirmation.component';\r\nimport { ResetPasswordComponent } from './resetpassword/reset-password.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { PartnershipComponent } from './partnership/partnership.component';\r\nimport { CityParkComponent } from '../landing/city-park/city-park.component';\r\nimport { AirportParkComponent } from '../landing/airport-park/airport-park.component';\r\nimport { TruckParkingComponent } from '../landing/truck-parking/truck-parking.component';\r\nimport { SemiTruckComponent } from '../landing/semi-truck/semi-truck.component';\r\nimport { BoatParkingComponent } from '../landing/boat-parking/boat-parking.component';\r\nimport { SeaPlaneComponent } from '../landing/sea-plane/sea-plane.component';\r\nimport { HelicopterComponent } from '../landing/helicopter/helicopter.component';\r\nimport { AfterConfirmationComponent } from './after-confirmation/after-confirmation.component';\r\nimport { RefundComponent } from './refund/refund.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent,\r\n    ForgetPasswordComponent,\r\n    ChangePasswordComponent,\r\n    EmailConfirmationComponent,\r\n    ResetPasswordComponent,\r\n    ContactComponent,\r\n    PartnershipComponent,\r\n    CityParkComponent,\r\n    AirportParkComponent,\r\n    TruckParkingComponent,\r\n    SemiTruckComponent,\r\n    BoatParkingComponent,\r\n    SeaPlaneComponent,\r\n    HelicopterComponent,\r\n    AfterConfirmationComponent,\r\n    RefundComponent\r\n  ],\r\n  imports: [\r\n    AuthenticationtRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class AuthenticationModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { ErrorModel } from 'src/app/model/login/error.model';\r\nimport swal from 'sweetalert2';\r\nimport { ApiResponse } from 'src/app/model/apiresponse.model';\r\nimport { ChangePassword } from 'src/app/model/login/change_password.model';\r\nimport { LoginService } from '../../shared/authentication/login/login.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomValidators } from 'src/app/helper/custom-validators';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  changepasswordConfirm: FormGroup;\r\n\r\n  email: string;\r\n  httpError: any[];\r\n  submitBtnDisable: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private loginService: LoginService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.email = this.route.snapshot.paramMap.get('email');\r\n\r\n\r\n    this.changepasswordConfirm = this.fb.group({\r\n      email: [this.email, [Validators.required, Validators.email]],\r\n      currentPassword: ['', [Validators.required]],\r\n      passwordGroup: this.fb.group({\r\n        password: [\r\n          null,\r\n          Validators.compose([\r\n            Validators.required,\r\n            // check whether the entered password has a number\r\n            CustomValidators.patternValidator(/\\d/, {\r\n              hasNumber: true\r\n            }),\r\n            // check whether the entered password has upper case letter\r\n            CustomValidators.patternValidator(/[A-Z]/, {\r\n              hasCapitalCase: true\r\n            }),\r\n            // check whether the entered password has a lower case letter\r\n            CustomValidators.patternValidator(/[a-z]/, {\r\n              hasSmallCase: true\r\n            }),\r\n            // check whether the entered password has a special character\r\n            CustomValidators.patternValidator(\r\n              /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/,\r\n              {\r\n                hasSpecialCharacters: true\r\n              }\r\n            ),\r\n            Validators.minLength(8)\r\n          ])\r\n        ],\r\n        passwordConfirmation: ['', Validators.required]\r\n      }, { validator: CustomValidators.matchPassword })\r\n\r\n    });\r\n\r\n    this.changepasswordConfirm.valueChanges.subscribe((data) => {\r\n      this.logValidationErrors(this.changepasswordConfirm);\r\n    })\r\n\r\n  }\r\n  public get getPasswordControl() {\r\n    return this.changepasswordConfirm.get('passwordGroup').get('password');\r\n  }\r\n\r\n  formErrors = {\r\n    email: '',\r\n    currentPassword: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    passwordGroup: ''\r\n  };\r\n\r\n  // This object contains all the validation messages for this form\r\n  validationMessages = {\r\n    email: {\r\n      required: 'Email is required!',\r\n      email: 'Enter a valid email address!'\r\n    },\r\n    currentPassword: {\r\n      required: 'Current Password Password is required.'\r\n    },\r\n    password: {\r\n      required: \"Password is required\",\r\n      minlength: \"Must be at least 8 characters!\",\r\n      hasNumber: \"Must contain at least 1 number!\",\r\n      hasCapitalCase: \"Must contain at least 1 in Capital Case!\",\r\n      hasSmallCase: \"Must contain at least 1 Letter in Small Case!\",\r\n      hasSpecialCharacters: \"Must contain at least 1 Special Character!\"\r\n    },\r\n    passwordConfirmation: {\r\n      required: 'Confirm Password  is required.',\r\n      passwordMismatch: 'Password and Confirm Password do not match.'\r\n    },\r\n    passwordGroup: {\r\n      passwordMismatch: 'Password and Confirm Password do not match.'\r\n    },\r\n  };\r\n\r\n\r\n  logValidationErrors(group: FormGroup = this.changepasswordConfirm): void {\r\n\r\n    Object.keys(group.controls).forEach((key: string) => {\r\n      const abstractControl = group.get(key);\r\n      this.formErrors[key] = '';\r\n\r\n      if (abstractControl && !abstractControl.valid && abstractControl.touched) {\r\n        const messages = this.validationMessages[key];\r\n\r\n        for (const errorKey in abstractControl.errors) {\r\n          if (errorKey) {\r\n            if (this.formErrors[key] == '')\r\n              this.formErrors[key] += messages[errorKey] + ' ';\r\n          }\r\n        }\r\n      }\r\n\r\n      if (abstractControl instanceof FormGroup) {\r\n        this.logValidationErrors(abstractControl);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  showSwal(title) {\r\n    swal({\r\n      title: title,\r\n      // text: text,\r\n      buttonsStyling: false,\r\n      confirmButtonClass: \"btn btn-fill btn-success\",\r\n      type: \"success\"\r\n\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.router.navigate(['pages/login']);\r\n      }\r\n      else {\r\n        this.router.navigate(['pages/login']);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitBtnDisable = true;\r\n    if (this.changepasswordConfirm.invalid) {\r\n      this.logValidationErrors(this.changepasswordConfirm)\r\n    }\r\n    else {\r\n      let changePassword = new ChangePassword();\r\n      changePassword.Email = this.changepasswordConfirm.get('email').value;\r\n      changePassword.CurrentPassword = this.changepasswordConfirm.get('currentPassword').value;\r\n      changePassword.NewPassword = this.changepasswordConfirm.get('passwordGroup').get('password').value;\r\n\r\n      this.loginService.changePassword(changePassword).subscribe((response: ApiResponse<string>) => {\r\n        this.submitBtnDisable = false;\r\n        if (response.data) {\r\n          this.showSwal(response.data);\r\n\r\n        }\r\n        else {\r\n          this.httpError = response.errors;\r\n        }\r\n      }, (error) => {\r\n        this.submitBtnDisable = false;\r\n        this.httpError = error;\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","\r\n<section class=\"login-page-wrapper\">\r\n    <app-nav-bar-new></app-nav-bar-new>\r\n    <div class=\"container py-5\">\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-7 mx-auto px-5 bg-light\" style=\"border-radius: 20px;\">\r\n                <form [formGroup]=\"changepasswordConfirm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-card\">\r\n                        <div class=\"form-card-grid\">\r\n                            <h1 class=\"h1 font-weight-bold text-center py-2\" style=\"font-size: 30px;\">Change Password\r\n                            </h1>\r\n                            <div class=\"form-content\">\r\n                                <div class=\"form-group\">\r\n                                    <input class=\"form-control form-control-lg\" type=\"input\"\r\n                                        (blur)=\"logValidationErrors()\" placeholder=\"Enter Email\" id=\"email\"\r\n                                        formControlName=\"email\" />\r\n                                    <div *ngIf=\"formErrors.email\" class=\"text-danger\">\r\n                                        {{formErrors.email}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 my-1\">&nbsp;</div>\r\n                                <div class=\"form-group\">\r\n                                    <input class=\"form-control form-control-lg\" type=\"input\"\r\n                                        (blur)=\"logValidationErrors()\" type=\"password\" placeholder=\"New Password\"\r\n                                        formControlName=\"currentPassword\" />\r\n                                    <div *ngIf=\"formErrors.currentPassword\" class=\"text-danger\">\r\n                                        {{formErrors.currentPassword}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 my-1\">&nbsp;</div>\r\n                                <div formGroupName=\"passwordGroup\">\r\n                                   \r\n                                    <div class=\"form-group\">\r\n                                        <input class=\"form-control form-control-lg\" type=\"input\"\r\n                                            (blur)=\"logValidationErrors()\" type=\"password\" placeholder=\"Password\"\r\n                                            formControlName=\"password\" />\r\n                                        <div *ngIf=\"formErrors.password\" class=\"text-danger\">\r\n                                            {{formErrors.password}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 my-1\">&nbsp;</div>\r\n                                    <div class=\"form-group\">\r\n                                        <input class=\"form-control form-control-lg\" type=\"input\"\r\n                                            (blur)=\"logValidationErrors()\" type=\"password\"\r\n                                            placeholder=\"Confirm Password\" formControlName=\"passwordConfirmation\" />\r\n                                        <div *ngIf=\"(formErrors.passwordConfirmation || formErrors.passwordGroup)\"\r\n                                            class=\"text-danger\">\r\n                                            {{formErrors.passwordConfirmation ? formErrors.passwordConfirmation\r\n                                    : formErrors.passwordGroup}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 my-1\">&nbsp;</div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group mt-4 mb-3\">\r\n                                    <button class=\"btn-login py-2\"\r\n                                        [disabled]=\"submitBtnDisable || changepasswordConfirm.invalid\">\r\n                                        <span class=\"spinner-border spinner-border-sm\" *ngIf=\"submitBtnDisable\"\r\n                                            role=\"status\" aria-hidden=\"true\"></span>\r\n                                        {{submitBtnDisable?'Loading...':'Update Password'}}\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div class=\"text-center text-danger mt-2\">\r\n                                    {{httpError}}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ConfirmDialogService } from 'src/app/shared/confirm-dialog/confirm-dialog.service';\r\nimport { UserService } from 'src/app/shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  emailUsFormGroup: FormGroup;\r\n  constructor(private fb: FormBuilder, private userService: UserService,private dialogService: ConfirmDialogService) { }\r\n\r\n  ngOnInit() {\r\n    this.emailUsFormGroup = this.fb.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.email, Validators.required]],\r\n      message: ['', Validators.required],\r\n      phone: ['', [Validators.pattern(\"^[1234567890][0-9]{9}$\")]]\r\n    });\r\n\r\n    this.emailUsFormGroup.valueChanges.subscribe((data) => {\r\n      this.logValidationErrors(this.emailUsFormGroup);\r\n    });\r\n\r\n  }\r\n\r\n  sendMessage() {\r\n\r\n    const body = {\r\n      SentFrom: this.emailUsFormGroup.get('email').value,\r\n      SentMessage: this.emailUsFormGroup.get('message').value,\r\n      FirstName: this.emailUsFormGroup.get('firstName').value,\r\n      LastName: this.emailUsFormGroup.get('lastName').value,\r\n      PhoneNumber: this.emailUsFormGroup.get('phone').value\r\n    };\r\n\r\n    this.userService.EmailUs(body).subscribe((response) => {\r\n      this.emailUsFormGroup.reset();\r\n      const options = {\r\n        title: 'Message',\r\n        message: 'Your Message has been sent',\r\n        confirmText: 'OK'\r\n      };\r\n      this.dialogService.open(options);\r\n      this.dialogService.confirmed().subscribe(confirmed => {\r\n        if (confirmed) {\r\n\r\n        }\r\n      });\r\n\r\n    }, (error) => {\r\n      console.log(error);\r\n\r\n    })\r\n  }\r\n\r\n  formErrors = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    message: '',\r\n    phone: ''\r\n  };\r\n\r\n  // This object contains all the validation messages for this form\r\n  validationMessages = {\r\n    email: {\r\n      required: 'Email is required!',\r\n      email: 'Enter a valid email address!'\r\n    },\r\n    firstName: {\r\n      required: 'FirstName is required!'\r\n    },\r\n    lastName: {\r\n      required: 'Last Name is required!'\r\n    },\r\n    phone: {\r\n      pattern: 'Phone must be a valid phone number'\r\n    },\r\n    message: {\r\n      required: 'Message is required!'\r\n    }\r\n  };\r\n\r\n  logValidationErrors(group: FormGroup = this.emailUsFormGroup): void {\r\n    Object.keys(group.controls).forEach((key: string) => {\r\n      const abstractControl = group.get(key);\r\n      this.formErrors[key] = '';\r\n\r\n      if (abstractControl && !abstractControl.valid && abstractControl.touched) {\r\n        const messages = this.validationMessages[key];\r\n        for (const errorKey in abstractControl.errors) {\r\n          if (errorKey) {\r\n            this.formErrors[key] += messages[errorKey] + ' ';\r\n          }\r\n        }\r\n      }\r\n\r\n      if (abstractControl instanceof FormGroup) {\r\n        this.logValidationErrors(abstractControl);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<section class=\"contact-wrapper\" style=\"overflow: hidden;\">\r\n  <div class=\"container-fluid mx-0 px-0\">\r\n    <app-nav-bar-new></app-nav-bar-new>\r\n    <div class=\" mx-0 px-0\" style=\"padding-top: 100px;\">\r\n      <div class=\"row text-center  mx-0 px-0\">\r\n        <div class=\"col-12 col-md-6  mx-0 px-0\" style=\"background-color: #000;padding-top: 60px;padding-bottom: 60px;\">\r\n          <h1 class=\"h1 font-weight-bold text-white text-center pt-5\" style=\"font-size: 35px;letter-spacing: 10px;\">\r\n            CONTACT US\r\n          </h1>\r\n          <div style=\"width: 75px;height: 8px;background-color: #fff;\" class=\"mx-auto my-2\"></div>\r\n          <div class=\"text-light py-4 mx-auto\">\r\n            <span>Phone: <a class=\"text-decoration-underline ml-2\" href=\"tel:844-633-9667\"> 844-633-9667</a></span> <br>\r\n            <span>Email: <a class=\"text-decoration-underline ml-2\"\r\n                href=\"mailto:support@edyoos.com\">support@edyoos.com</a></span>\r\n          </div>\r\n          <div class=\"py-1\">\r\n            <!-- <a class=\"my-1\" href=\"https://www.facebook.com/edyoosparking/\"> <img style=\"width: 30px;\"\r\n                src=\"/assets/images/facebook-icon.png\" /></a> -->\r\n            <!-- <span class=\"material-icons text-white\" style=\"font-size: 35px;\">\r\n              facebook\r\n            </span> -->\r\n            <!-- <i class=\"fab fa-youtube text-white\"></i>\r\n            <span class=\"material-icons text-white\" style=\"font-size: 35px;\">\r\n              facebook\r\n            </span> -->\r\n            <a target=\"fbWindow\" href=\"https://www.facebook.com/edyoosparking/\">\r\n              <img class=\"mr-1\"\r\n              src=\"https://static.wixstatic.com/media/ce6ec7c11b174c0581e20f42bb865ce3.png/v1/fill/w_39,h_39,al_c,q_85,usm_0.66_1.00_0.01/ce6ec7c11b174c0581e20f42bb865ce3.webp\"\r\n              alt=\"\">\r\n            </a>\r\n            <a target=\"instaWindow\" href=\"https://www.instagram.com/accounts/login/?next=/edyoos/\">\r\n              <img class=\"mr-1\"\r\n              src=\"https://static.wixstatic.com/media/fdcfaba150fc427da298a00cb09d91c1.png/v1/fill/w_39,h_39,al_c,q_85,usm_0.66_1.00_0.01/fdcfaba150fc427da298a00cb09d91c1.webp\"\r\n              alt=\"\">\r\n            </a>\r\n            <a target=\"ytWindow\" href=\"https://www.youtube.com/channel/UCoztuFfw-q2SqrVwPeWOiDQ\">\r\n              <img class=\"mr-1\"\r\n              src=\"https://static.wixstatic.com/media/71ac09a5a92848cc943bf2ca2a09a6d0.png/v1/fill/w_39,h_39,al_c,q_85,usm_0.66_1.00_0.01/71ac09a5a92848cc943bf2ca2a09a6d0.webp\"\r\n              alt=\"\"> \r\n            </a>\r\n                       \r\n            <!-- <a class=\"my-1\" href=\"https://twitter.com/EdyoosParking\"> <img style=\"width: 30px;\"\r\n                src=\"/assets/images/twitter-icon.png\" /></a>\r\n            <a class=\"my-1\" href=\"https://www.instagram.com/accounts/login/?next=/edyoos/\"> <img style=\"width: 30px;\"\r\n                src=\"/assets/images/instagram.png\" /></a> -->\r\n          </div>\r\n        </div>\r\n        <div class=\"col-12 col-md-6 mx-0 py-5\" style=\"background-color: #fff;padding-top: 60px;padding-bottom: 60px;\">\r\n          <h1 class=\"h1 font-weight-bold  text-center py-2\" style=\"font-size: 30px;\">Or Send Us A Message!\r\n          </h1>\r\n          <form [formGroup]=\"emailUsFormGroup\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-md-8 mx-auto\">\r\n                <div class=\"form-content\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                      <div class=\"form-group\">\r\n                        <input class=\"form-control form-control-lg\" type=\"text\" formControlName=\"firstName\"\r\n                          placeholder=\"First Name\" required (blur)=\"logValidationErrors()\" />\r\n                        <div *ngIf=\"formErrors.firstName\" class=\"text-danger\">\r\n                          {{formErrors.firstName}}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                      <div class=\"form-group\">\r\n                        <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"lastName\"\r\n                          placeholder=\"Last Name\" (blur)=\"logValidationErrors()\" />\r\n                        <div *ngIf=\"formErrors.lastName\" class=\"text-danger\">\r\n                          {{formErrors.lastName}}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-6\">\r\n                      <div class=\"form-group\">\r\n                        <input class=\"form-control form-control-lg\" type=\"email\" formControlName=\"email\"\r\n                          placeholder=\"Email\" (blur)=\"logValidationErrors()\" />\r\n                        <div *ngIf=\"formErrors.email\" class=\"text-danger\">\r\n                          {{formErrors.email}}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                      <div class=\"form-group\">\r\n                        <input class=\"form-control form-control-lg\" type=\"text\" formControlName=\"phone\"\r\n                          placeholder=\"Phone\" (blur)=\"logValidationErrors()\" />\r\n                        <div *ngIf=\"formErrors.phone\" class=\"text-danger\">\r\n                          {{formErrors.phone}}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                      <textarea placeholder=\"Message\" class=\"form-control\" formControlName=\"message\"\r\n                        id=\"exampleFormControlTextarea1\" (blur)=\"logValidationErrors()\" rows=\"3\"></textarea>\r\n                      <div *ngIf=\"formErrors.message\" class=\"text-danger\">\r\n                        {{formErrors.message}}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"form-group text-center mt-2\">\r\n                    <button class=\"btn btn-login\" type=\"submit\" (click)=\"sendMessage()\" [disabled]=\"emailUsFormGroup.invalid\">Send\r\n                      Message</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, Validators, FormBuilder, AbstractControl } from '@angular/forms';\r\nimport { EmailConfirm } from 'src/app/model/emailconfirm/emailconfirm.model';\r\nimport { RegisterService } from '../../shared/authentication/register/register.service';\r\nimport { ApiResponse } from 'src/app/model/apiresponse.model';\r\nimport swal from 'sweetalert2';\r\nimport { ErrorModel } from 'src/app/model/login/error.model';\r\n\r\n@Component({\r\n  selector: 'app-email-confirmation',\r\n  templateUrl: './email-confirmation.component.html',\r\n  styleUrls: ['./email-confirmation.component.scss']\r\n})\r\nexport class EmailConfirmationComponent implements OnInit {\r\n\r\n  confirmEmailForm: FormGroup;\r\n  submitted: boolean = false;\r\n  httpError: string;\r\n  emailConfirm: EmailConfirm = new EmailConfirm();\r\n  submitBtnDisable: boolean = false;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private registerService: RegisterService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.confirmEmailForm = this.fb.group({\r\n      password: ['', [Validators.required\r\n      ]]\r\n    });\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      debugger\r\n      this.emailConfirm.Email = params['email'];\r\n\r\n      if (params['userid'])\r\n        this.emailConfirm.UserId = params['userid'];\r\n      else if (params['userId'])\r\n        this.emailConfirm.UserId = params['userId'];\r\n\r\n      this.emailConfirm.Token = params['token'];\r\n    });\r\n\r\n    this.confirmEmailForm.valueChanges.subscribe((data) => {\r\n      this.logValidationErrors(this.confirmEmailForm);\r\n    })\r\n\r\n  }\r\n\r\n  formErrors = {\r\n    password: ''\r\n  };\r\n\r\n  validationMessages = {\r\n    password: {\r\n      required: 'Password is required.'\r\n\r\n    }\r\n\r\n  };\r\n  showSwal(type) {\r\n    if (type == 'success-message') {\r\n      swal({\r\n        title: \"Email has been confirmed!\",\r\n        text: \"You clicked the button!\",\r\n        buttonsStyling: false,\r\n        confirmButtonClass: \"btn btn-fill btn-success\",\r\n        type: \"success\"\r\n\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.router.navigate(['pages/login']);\r\n        }\r\n        else {\r\n          this.router.navigate(['pages/login']);\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  logValidationErrors(group: FormGroup = this.confirmEmailForm): void {\r\n\r\n    Object.keys(group.controls).forEach((key: string) => {\r\n      const abstractControl = group.get(key);\r\n      this.formErrors[key] = '';\r\n\r\n      if (abstractControl && !abstractControl.valid) {\r\n        const messages = this.validationMessages[key];\r\n        for (const errorKey in abstractControl.errors) {\r\n          if (errorKey) {\r\n            this.formErrors[key] += messages[errorKey] + ' ';\r\n          }\r\n        }\r\n      }\r\n\r\n      if (abstractControl instanceof FormGroup) {\r\n        this.logValidationErrors(abstractControl);\r\n      }\r\n    });\r\n  }\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    if (this.confirmEmailForm.invalid) {\r\n      this.logValidationErrors(this.confirmEmailForm)\r\n    }\r\n    else {\r\n      this.submitBtnDisable = true;\r\n      this.emailConfirm.Password = this.confirmEmailForm.get('password').value;\r\n      this.registerService.EmailConfirmation(this.emailConfirm).subscribe((response: ApiResponse<string>) => {\r\n        this.submitBtnDisable = false;\r\n        if (response.data) {\r\n          // this.showSwal('success-message');\r\n          this.router.navigate(['pages/afterconfirmation']);\r\n        }\r\n\r\n      }, (error) => {\r\n        this.submitBtnDisable = false;\r\n        this.httpError = error;\r\n      })\r\n\r\n    }\r\n  }\r\n}\r\n","\r\n<section class=\"login-page-wrapper\">\r\n    <app-nav-bar-new></app-nav-bar-new>\r\n    <div class=\"container py-5\">\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-7 mx-auto px-5 bg-light\" style=\"border-radius: 20px;\">\r\n                <form [formGroup]=\"confirmEmailForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-card\">\r\n                        <div class=\"form-card-grid\">\r\n                            <h1 class=\"h1 font-weight-bold text-center py-2\" style=\"font-size: 30px;\">Confirm Email</h1>\r\n                            <div class=\"form-content\">\r\n                                <div class=\"form-group\">\r\n                                    <input class=\"form-control form-control-lg\" type=\"password\"\r\n                                        (blur)=\"logValidationErrors()\" placeholder=\"Enter Password\" id=\"password\"\r\n                                        formControlName=\"password\" />\r\n                                    <div *ngIf=\"formErrors.password\" class=\"text-danger\">\r\n                                        {{formErrors.password}}\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                                <div class=\"form-group mt-4 mb-3\">\r\n                                    <button class=\"btn-login py-2\"\r\n                                        [disabled]=\"submitBtnDisable || confirmEmailForm.invalid\">\r\n                                        <span class=\"spinner-border spinner-border-sm\" *ngIf=\"submitBtnDisable\"\r\n                                            role=\"status\" aria-hidden=\"true\"></span>\r\n                                        {{submitBtnDisable?'Loading...':'Confirm Email'}}\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div class=\"text-center text-danger mt-2\">\r\n                                    {{httpError}}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>\r\n<app-footer></app-footer>","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ForgetPassword } from 'src/app/model/login/forget_password.model';\r\nimport swal from 'sweetalert2';\r\nimport { LoginService } from '../../shared/authentication/login/login.service';\r\nimport { ApiResponse } from 'src/app/model/apiresponse.model';\r\nimport { ErrorModel } from 'src/app/model/login/error.model';\r\n\r\n@Component({\r\n   selector: 'app-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.scss']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n  forgetPasswordForm: FormGroup;\r\n  httpError: any;\r\n  \r\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router,private loginService:LoginService){\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.forgetPasswordForm = this.fb.group({\r\n      email: ['', [Validators.required,Validators.email,\r\n        // Validators.pattern(\"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$\")\r\n      ]]\r\n    });\r\n\r\n    this.forgetPasswordForm.valueChanges.subscribe((data) => {\r\n      this.logValidationErrors(this.forgetPasswordForm);\r\n    })\r\n\r\n  }\r\n\r\n  formErrors = {\r\n    email: ''\r\n  };\r\n\r\n  validationMessages = {\r\n    email: {\r\n      required: 'Email is required!',\r\n      email:'Enter valid email address!'\r\n     \r\n    }\r\n\r\n  };\r\n\r\n  showSwal(title) {\r\n   \r\n      swal({\r\n        title: title,\r\n        // text: text,\r\n        buttonsStyling: false,\r\n        confirmButtonClass: \"btn btn-fill btn-success\",\r\n        type: \"success\"\r\n\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.router.navigate(['pages/login']);\r\n        }\r\n        else {\r\n          this.router.navigate(['pages/login']);\r\n        }\r\n      });\r\n  }\r\n\r\n  logValidationErrors(group: FormGroup = this.forgetPasswordForm): void {\r\n\r\n    Object.keys(group.controls).forEach((key: string) => {\r\n      const abstractControl = group.get(key);\r\n      this.formErrors[key] = '';\r\n\r\n      if (abstractControl && !abstractControl.valid) {\r\n        const messages = this.validationMessages[key];\r\n        for (const errorKey in abstractControl.errors) {\r\n          if (errorKey) {\r\n            this.formErrors[key] += messages[errorKey] + ' ';\r\n          }\r\n        }\r\n      }\r\n\r\n      if (abstractControl instanceof FormGroup) {\r\n        this.logValidationErrors(abstractControl);\r\n      }\r\n    });\r\n  }\r\n  submitBtnDisable:boolean=false;\r\n\r\n  onSubmit(): void {\r\n  \r\n    if (this.forgetPasswordForm.invalid) {\r\n      this.logValidationErrors(this.forgetPasswordForm)\r\n    }\r\n    else {\r\n    this.submitBtnDisable=true;\r\n      let forgetPassword=new ForgetPassword();\r\n      forgetPassword.Email=this.forgetPasswordForm.get('email').value;\r\n      forgetPassword.ReturnUrl=`${window.location.origin}/#/pages/resetpassword`;\r\n     \r\n      this.loginService.forgetPassword(forgetPassword).subscribe((response: ApiResponse<string>) => {\r\n       \r\n        if (response.data) {        \r\n          this.showSwal(response.data);\r\n        }\r\n        \r\n      },(error)=>{\r\n        this.submitBtnDisable=false;\r\n        this.httpError=error;\r\n      })\r\n\r\n     \r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<!-- <app-nav-bar></app-nav-bar>\r\n<div class=\"login-page\">\r\n    <form [formGroup]=\"forgetPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"p-4 mx-auto login-container\">\r\n        <h1>Forget Password</h1>\r\n        <mat-form-field class=\"col-12 mb-2\">\r\n            <input matInput type=\"text\" placeholder=\"Email Address\" (blur)=\"logValidationErrors()\" required formControlName=\"email\" />\r\n            <mat-error *ngIf=\"formErrors.email\">\r\n                {{formErrors.email}}\r\n              </mat-error>  \r\n            <br />\r\n        </mat-form-field>\r\n        <button class=\"login-btn col-8\" [disabled]=\"forgetPasswordForm.invalid\">Send</button>\r\n        <div class=\"text-center text-danger\">\r\n            {{httpError}}\r\n        </div>\r\n    </div>\r\n</form>\r\n</div> -->\r\n<section class=\"forget-password-wrapper\">\r\n    <app-nav-bar-new></app-nav-bar-new>\r\n    <div class=\"container py-5\">\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-12 col-md-7 mx-auto px-md-5 bg-light\" style=\"border-radius: 20px;\">\r\n                <form [formGroup]=\"forgetPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"p-4 mx-auto\">\r\n                        <h1 class=\"h1 font-weight-bold text-center py-2\" style=\"font-size: 30px;\">\r\n                            Forget Password</h1>\r\n                        <div class=\"col-12 mb-2\">\r\n                            <div class=\"form-group\">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Email Address\"\r\n                                    (blur)=\"logValidationErrors()\" required formControlName=\"email\" />\r\n                                <div *ngIf=\"formErrors.email\" class=\"text-danger\">\r\n                                    {{formErrors.email}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12 text-center\">\r\n                            <button class=\"btn btn-login mx-auto px-5\" [disabled]=\"forgetPasswordForm.invalid || submitBtnDisable\">\r\n                                <span class=\"spinner-border spinner-border-sm\" *ngIf=\"submitBtnDisable\" role=\"status\"\r\n                                    aria-hidden=\"true\"></span>\r\n                                {{submitBtnDisable?'Loading...':'Send'}}\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"text-center text-danger\">\r\n                            {{httpError}}\r\n                        </div>\r\n                        <div class=\"form-group f14 fcorange text-center mt-4\">\r\n                            <a style=\"cursor: pointer;\" [routerLink]=\"['/pages/login']\">Back to Login</a>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<app-footer></app-footer>","import { Component, OnInit, ElementRef, NgZone } from '@angular/core';\r\nimport { LoginService } from '../../shared/authentication/login/login.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserLogin } from 'src/app/model/login/login.model';\r\nimport { ApiResponse } from 'src/app/model/apiresponse.model';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ErrorModel } from 'src/app/model/login/error.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport swal from 'sweetalert2';\r\nimport { AuthenticationService } from '../../shared/authentication/authentication.service';\r\nimport { User } from 'src/app/model/login/user.model';\r\nimport { CustomValidators } from 'src/app/helper/custom-validators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CartService } from 'src/app/shared/cart.service';\r\nimport { PlacesService } from 'src/app/shared/places.service';\r\nimport { Cart } from 'src/app/model/cart/cart.model';\r\n\r\ndeclare var window: any;\r\ndeclare var FB: any;\r\ndeclare var auth2: any;\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss']\r\n\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n    loginForm: FormGroup;\r\n    submitBtnDisable = false;\r\n    httpError: any;\r\n\r\n    constructor(private fb: FormBuilder, public router: Router, private loginService: LoginService,\r\n        private cookieService: CookieService, private authenticationService: AuthenticationService,\r\n        private route: ActivatedRoute, private cartService: CartService, private placesService: PlacesService, public zone: NgZone) {\r\n\r\n    }\r\n\r\n    googleLogin() {\r\n        auth2.grantOfflineAccess()\r\n            .then((result) => this.signInCallback(result));\r\n\r\n        // auth2.signIn().then((result) => this.signInCallback(result));\r\n    }\r\n\r\n    signInCallback(authResult) {\r\n       \r\n        var params = {\r\n            Code: authResult.code,\r\n            ReturnUrl: window.location.origin,\r\n            GrantType: \"authorization_code\"\r\n        }\r\n\r\n        this.authenticationService.externalGoogleLogin(params).subscribe((response) => {\r\n       \r\n            this.setlocalStorageAndGetCartDetails(response);\r\n\r\n        }, (error) => {\r\n            console.log(error);\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    returnUrl: string;\r\n\r\n    ngOnInit() {\r\n\r\n        this.route.queryParams.subscribe(params => {\r\n            this.returnUrl = params['returnurl'];\r\n            if (this.returnUrl) {\r\n                this.returnUrl = this.returnUrl.slice(this.returnUrl.indexOf('/') + 1, this.returnUrl.length);\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        let email = atob(this.cookieService.get('secure_data1'));\r\n        let password = atob(this.cookieService.get('secure_data2'));\r\n        let rememberMe: boolean = false;\r\n\r\n        if (email && password) {\r\n            rememberMe = true;\r\n        }\r\n\r\n        this.loginForm = this.fb.group({\r\n            email: [email, [Validators.required,\r\n            // Validators.pattern(\"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$\")\r\n            Validators.email\r\n            ]],\r\n            password: [null, Validators.required],\r\n            rememberMe: [rememberMe]\r\n\r\n\r\n        });\r\n\r\n        this.loginForm.valueChanges.subscribe((data) => {\r\n            this.logValidationErrors(this.loginForm);\r\n        })\r\n    }\r\n\r\n\r\n    public get getPasswordControl() {\r\n        return this.loginForm.get('password');\r\n    }\r\n\r\n    formErrors = {\r\n        email: '',\r\n        password: '',\r\n    };\r\n\r\n    // This object contains all the validation messages for this form\r\n    validationMessages = {\r\n        email: {\r\n            required: 'Email is required!',\r\n            email: 'Enter a valid email address!'\r\n        },\r\n        password: {\r\n            required: 'Password is required!'\r\n\r\n        }\r\n    };\r\n\r\n\r\n    statusChangeCallback(response) {\r\n        if (response.status === 'connected') {\r\n\r\n            this.externalLogin(response.authResponse.accessToken);\r\n        } \r\n    }\r\n\r\n    facebookLogin() {\r\n        FB.login((response) => {\r\n            this.statusChangeCallback(response);\r\n        }, { scope: 'public_profile,email' });\r\n    }\r\n\r\n\r\n    externalLogin(accessToken: string) {\r\n        this.authenticationService.externalFacebookLogin(accessToken).subscribe((response) => {\r\n            this.setlocalStorageAndGetCartDetails(response);\r\n\r\n        }, (error) => {\r\n            console.log(error);\r\n\r\n        })\r\n    }\r\n\r\n\r\n    logValidationErrors(group: FormGroup = this.loginForm): void {\r\n        Object.keys(group.controls).forEach((key: string) => {\r\n            const abstractControl = group.get(key);\r\n            this.formErrors[key] = '';\r\n\r\n            if (abstractControl && !abstractControl.valid && abstractControl.touched) {\r\n                const messages = this.validationMessages[key];\r\n                for (const errorKey in abstractControl.errors) {\r\n                    if (errorKey) {\r\n                        this.formErrors[key] += messages[errorKey] + ' ';\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (abstractControl instanceof FormGroup) {\r\n                this.logValidationErrors(abstractControl);\r\n            }\r\n        });\r\n    }\r\n\r\n    showSwal(title) {\r\n        swal({\r\n            title: title,\r\n            // text: text,\r\n            buttonsStyling: false,\r\n            confirmButtonClass: \"btn btn-fill btn-success\",\r\n            // type: \"success\"\r\n\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.router.navigate(['pages/changepassword', this.loginForm.get('email').value]);\r\n            }\r\n            else {\r\n                this.router.navigate(['pages/changepassword', this.loginForm.get('email').value]);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    setlocalStorageAndGetCartDetails(response) {\r\n        this.authenticationService.setUserValue(response.data);\r\n\r\n        let cart: Cart[] = [];\r\n\r\n        if (this.placesService.cartPropertyGroup.length > 0) {\r\n\r\n            this.placesService.cartPropertyGroup.forEach((val, index) => {\r\n                let cartDetails = new Cart();\r\n                val.PropertyGroupID = cartDetails.PropertyGroupID;\r\n                cart.push(cartDetails);\r\n            });\r\n\r\n\r\n\r\n            this.cartService.addCart(cart).subscribe((response) => {\r\n                console.log(response.data);\r\n\r\n                this.getCartDetails();\r\n\r\n                if (this.returnUrl)\r\n                    this.router.navigate([this.returnUrl]);\r\n                else {\r\n                    this.zone.run(() => {\r\n                        this.router.navigate(['landing/home']);\r\n                    });\r\n                }\r\n\r\n\r\n\r\n            }, (error) => {\r\n                console.log(error);\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.getCartDetails();\r\n            if (this.returnUrl)\r\n                this.router.navigate([this.returnUrl]);\r\n            else {\r\n                this.zone.run(() => {\r\n                    this.router.navigate(['landing/home']);\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n\r\n        if (this.loginForm.invalid) {\r\n            this.logValidationErrors(this.loginForm)\r\n\r\n        }\r\n        else {\r\n            let userLogin = new UserLogin();\r\n            userLogin.Email = this.loginForm.get('email').value;\r\n            userLogin.Password = this.loginForm.get('password').value;\r\n            this.submitBtnDisable = true;\r\n            this.loginService.userLogin(userLogin).subscribe((response: ApiResponse<User>) => {\r\n                if (response.data) {\r\n\r\n                    this.httpError = null;\r\n\r\n                    let rememberMe: boolean = this.loginForm.get('rememberMe').value;\r\n                    if (rememberMe) {\r\n                        this.cookieService.set('secure_data1', btoa(userLogin.Email));\r\n                        this.cookieService.set('secure_data2', btoa(userLogin.Password));\r\n                    }\r\n                    else {\r\n                        this.cookieService.delete('secure_data1');\r\n                        this.cookieService.delete('secure_data2');\r\n                    }\r\n\r\n\r\n                    if (!this.authenticationService.isAuthorized()) {\r\n\r\n                        this.setlocalStorageAndGetCartDetails(response);\r\n\r\n                    }\r\n                    else {\r\n                        this.authenticationService.setUserValue(response.data);\r\n                        this.getCartDetails();\r\n                        if (this.returnUrl)\r\n                            this.router.navigate([this.returnUrl]);\r\n                        else\r\n                            this.router.navigate(['landing/home']);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }, (error) => {\r\n                this.submitBtnDisable = false;\r\n                if (error == 'Password has expired') {\r\n                    this.showSwal(error);\r\n                }\r\n                this.httpError = error;\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    getCartDetails() {\r\n        this.cartService.getCartDetails().subscribe((response) => {\r\n            this.placesService.cartPropertyGroup = response.data;\r\n            localStorage.setItem('bookedPlaces', JSON.stringify(this.placesService.cartPropertyGroup));\r\n            // this.placesService.addedCartPropertyGroup.next(this.placesService.cartPropertyGroup);\r\n\r\n        }, (error) => {\r\n            console.log(error);\r\n\r\n        })\r\n    }\r\n}\r\n","<section class=\"login-page-wrapper\">\r\n    <app-nav-bar-new></app-nav-bar-new>\r\n    <div class=\"container py-5\">\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-12 col-md-7 mx-auto px-md-5 bg-light\" style=\"border-radius: 20px;\">\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-card\">\r\n                        <div class=\"form-card-grid\">\r\n                            <h1 class=\"h1 font-weight-bold text-center py-2\" style=\"font-size: 30px;\"> Sign in </h1>\r\n                            <div class=\"form-content\">\r\n                                <div class=\"form-group\">\r\n                                    <input class=\"form-control form-control-lg\" type=\"text\" formControlName=\"email\"\r\n                                        (blur)=\"logValidationErrors()\" placeholder=\"Email Address\" required\r\n                                        class=\"form-control\" />\r\n                                    <div *ngIf=\"formErrors.email\" class=\"text-danger\">\r\n                                        {{formErrors.email}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 my-1\">&nbsp;</div>\r\n                                <div class=\"form-group\">\r\n                                    <input class=\"form-control form-control-lg\" type=\"password\" placeholder=\"Password\"\r\n                                        (blur)=\"logValidationErrors()\" formControlName=\"password\" required\r\n                                        class=\"form-control\" />\r\n                                    <div *ngIf=\"formErrors.password\" class=\"text-danger\">\r\n                                        {{formErrors.password}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"mt-2\">\r\n                                    <input type=\"checkbox\" id=\"rememberMe\" value=\"remember-me\" class=\"mr-2\" />\r\n                                    <label for=\"rememberMe\">Remember Me</label>\r\n                                </div>\r\n\r\n                                <div class=\"text-center text-danger mt-2\">\r\n                                    {{httpError}}\r\n                                </div>\r\n\r\n                                <div class=\"form-group mt-4 mb-3\">\r\n                                    <button class=\"btn-login py-2\" [disabled]=\"loginForm.invalid || submitBtnDisable\">\r\n                                        <span class=\"spinner-border spinner-border-sm\" *ngIf=\"submitBtnDisable\"\r\n                                            role=\"status\" aria-hidden=\"true\"></span>\r\n                                        {{submitBtnDisable?'Loading...':'Login'}}\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"form-group f14 fcorange text-center\">\r\n                                    <a style=\"cursor: pointer;\"\r\n                                        (click)=\"router.navigateByUrl('pages/forgetpassword')\">Forgot\r\n                                        Password?</a>\r\n                                </div>\r\n                                <div class=\"social-img\">\r\n                                    <ul>\r\n                                        <li class=\"log-fb\">\r\n                                            <a [routerLink]=\"\" (click)=\"facebookLogin()\"><i\r\n                                                    class=\"fa fa-facebook\"></i></a>\r\n                                        </li>\r\n                                        \r\n                                        <li class=\"log-gp\">\r\n                                            <a [routerLink]=\"\" (click)=\"googleLogin()\">\r\n                                                <i class=\"fa fa-google\"></i></a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div class=\"form-group f14 fcorange text-center mt-4\">\r\n                                    <a style=\"cursor: pointer;\" (click)=\"router.navigateByUrl('pages/register')\">\r\n                                        Create an account</a>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- <div class=\"d-none\">\r\n                        <button class=\"login-btn col-8 bg-white text-dark\"\r\n                            (click)=\"router.navigateByUrl('pages/register')\">Create Your Edyoos\r\n                            Account</button>\r\n                    </div> -->\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ConfirmDialogService } from 'src/app/shared/confirm-dialog/confirm-dialog.service';\r\nimport { UserService } from 'src/app/shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-partnership',\r\n  templateUrl: './partnership.component.html',\r\n  styleUrls: ['./partnership.component.scss']\r\n})\r\nexport class PartnershipComponent implements OnInit {\r\n  emailUsFormGroup: FormGroup;\r\n  constructor(private fb: FormBuilder, private userService: UserService,private dialogService: ConfirmDialogService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.emailUsFormGroup = this.fb.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.email, Validators.required]],\r\n      message: ['', Validators.required],\r\n      phone: ['', [Validators.pattern(\"^[1234567890][0-9]{9}$\")]]\r\n    });\r\n\r\n    this.emailUsFormGroup.valueChanges.subscribe((data) => {\r\n      this.logValidationErrors(this.emailUsFormGroup);\r\n    });\r\n  }\r\n\r\n  sendMessage() {\r\n\r\n    const body = {\r\n      SentFrom: this.emailUsFormGroup.get('email').value,\r\n      SentMessage: this.emailUsFormGroup.get('message').value,\r\n      FirstName: this.emailUsFormGroup.get('firstName').value,\r\n      LastName: this.emailUsFormGroup.get('lastName').value,\r\n      PhoneNumber: this.emailUsFormGroup.get('phone').value,\r\n      FromBusiness: true\r\n    };\r\n\r\n    this.userService.EmailUs(body).subscribe((response) => {\r\n      this.emailUsFormGroup.reset();\r\n      const options = {\r\n        title: 'Message',\r\n        message: 'Your Message has been sent',\r\n        confirmText: 'OK'\r\n      };\r\n      this.dialogService.open(options);\r\n      this.dialogService.confirmed().subscribe(confirmed => {\r\n        if (confirmed) {\r\n\r\n        }\r\n      });\r\n\r\n    }, (error) => {\r\n      console.log(error);\r\n\r\n    })\r\n  }\r\n\r\n  formErrors = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    message: '',\r\n    phone: ''\r\n  };\r\n\r\n  // This object contains all the validation messages for this form\r\n  validationMessages = {\r\n    email: {\r\n      required: 'Email is required!',\r\n      email: 'Enter a valid email address!'\r\n    },\r\n    firstName: {\r\n      required: 'FirstName is required!'\r\n    },\r\n    lastName: {\r\n      required: 'Last Name is required!'\r\n    },\r\n    phone: {\r\n      pattern: 'Phone must be a valid phone number'\r\n    },\r\n    message: {\r\n      required: 'Message is required!'\r\n    }\r\n  };\r\n\r\n  logValidationErrors(group: FormGroup = this.emailUsFormGroup): void {\r\n    Object.keys(group.controls).forEach((key: string) => {\r\n      const abstractControl = group.get(key);\r\n      this.formErrors[key] = '';\r\n\r\n      if (abstractControl && !abstractControl.valid && abstractControl.touched) {\r\n        const messages = this.validationMessages[key];\r\n        for (const errorKey in abstractControl.errors) {\r\n          if (errorKey) {\r\n            this.formErrors[key] += messages[errorKey] + ' ';\r\n          }\r\n        }\r\n      }\r\n\r\n      if (abstractControl instanceof FormGroup) {\r\n        this.logValidationErrors(abstractControl);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"partner-wrapper\">\r\n  <app-nav-bar-new></app-nav-bar-new>\r\n  <div class=\"container py-5 mx-auto\">\r\n    <h1 class=\"h1 font-weight-bold text-left pl-3 py-2 text-white\" style=\"font-size: 30px;\">\r\n      Profitable. Effortless. Advanced.\r\n    </h1>\r\n    <div class=\"py-1\">\r\n      <h1 class=\"h1\" style=\"font-size: 25px; color:rgba(76, 218, 100) !important; ;\">\r\n        Start Making More Money With Superior Parking Management\r\n      </h1>\r\n    </div>\r\n    <p class=\"h2 text-white text-center\" style=\"font-size: 20px;letter-spacing: 4px;\">\r\n      Set your schedule, advertise your business, and choose your profit with Edyoos' simple, seamless parking\r\n      management platform. Everything you need to keep things running smoothly, all in one place, and 100% free.\r\n    </p>\r\n    <div style=\"width: 90%;height: 3px;background-color: #fff;\" class=\"mx-auto my-4\"></div>\r\n    <div class=\"row no-gutters py-3\">\r\n      <div class=\"col-12 col-md-2 position-relative\">\r\n        <div class=\" text-white\" style=\"opacity: 1;\"><svg preserveAspectRatio=\"xMidYMid meet\"\r\n            id=\"comp-kevheuhosvgcontent\" data-bbox=\"20.001 20 159.999 160\" viewBox=\"20.001 20 159.999 160\" height=\"60%\"\r\n            width=\"60%\" xmlns=\"http://www.w3.org/2000/svg\" data-type=\"color\" role=\"img\">\r\n            <g>\r\n              <path\r\n                d=\"M44.403 162.498c-2.094 0-3.729-.644-4.992-1.909-3.99-3.99-1.802-11.688 7.317-25.743 6.18-9.526 13.663-18.859 16.471-21.666l81.498-81.497c5.22-5.218 25.155-16.779 32.776-9.156 7.622 7.623-3.936 27.558-9.156 32.776L86.819 136.8c-2.807 2.809-12.139 10.291-21.666 16.471-9.601 6.231-16.238 9.227-20.75 9.227zM170.427 27.353c-4.607 0-15.81 5.029-20.421 9.64L68.508 118.49c-6.837 6.835-23.096 30.114-23.517 36.518 6.402-.42 29.683-16.68 36.518-23.517l81.498-81.497c5.412-5.414 11.402-19.907 9.156-22.157-.333-.332-.934-.484-1.736-.484z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M144.114 175.424a3.76 3.76 0 0 1-3.315-1.989L120.2 134.753l-18.321-18.321 5.31-5.31 18.717 18.717c.262.262.484.563.66.889l19.783 37.149 2.493-.038-17.02-84.295 7.359-1.485 17.914 88.719a3.758 3.758 0 0 1-3.619 4.498l-9.303.149-.059-.001z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M83.578 98.13L65.247 79.8 26.566 59.201a3.759 3.759 0 0 1-1.989-3.375l.149-9.303a3.755 3.755 0 0 1 4.498-3.619l88.696 17.909-1.485 7.359-84.274-17.014-.039 2.493 37.149 19.783c.326.176.627.398.889.66l18.727 18.727-5.309 5.309z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M74.11 180a3.752 3.752 0 0 1-3.221-1.822l-14.387-23.979 6.439-3.865 12.663 21.106 3.229-1.47-3.87-29.863 7.447-.964 4.226 32.613a3.754 3.754 0 0 1-2.167 3.9l-8.804 4.008a3.76 3.76 0 0 1-1.555.336z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M45.802 143.498l-23.979-14.387a3.757 3.757 0 0 1-1.485-4.776l4.008-8.804a3.771 3.771 0 0 1 3.9-2.167l32.613 4.226-.964 7.447-29.863-3.87-1.47 3.229 21.106 12.663-3.866 6.439z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <h1 class=\"h1 position-absolute svg-bottom-text\" style=\"font-size: 20px; color:rgba(76, 218, 100) !important;\">\r\n          Flights & Cruises\r\n        </h1>\r\n      </div>\r\n      <div class=\"col-12 col-md-2 position-relative\">\r\n        <div class=\" text-white\" style=\"opacity: 1;\">\r\n          <svg height=\"60%\" width=\"60%\" preserveAspectRatio=\"xMidYMid meet\" id=\"comp-kevhj5kasvgcontent\"\r\n            data-bbox=\"10 20.5 180.1 159\" viewBox=\"10 20.5 180.1 159\" xmlns=\"http://www.w3.org/2000/svg\"\r\n            data-type=\"color\" role=\"img\">\r\n            <g>\r\n              <path\r\n                d=\"M187.5 174.1H171V76.7c0-4.4-2.5-8-7-8h-37.5V28.5c0-4.4-3.6-8-8.1-8H59.5c-4.4 0-8 3.6-8 8v17H37.1c-4.4 0-8 3.6-8 8v120.6H12.7c-1.5 0-2.7 1.2-2.7 2.7 0 1.5 1.2 2.7 2.7 2.7h174.9c1.4 0 2.5-1.3 2.5-2.7-.1-1.4-1.3-2.7-2.6-2.7zm-121.8 0H53.2v-22.3h12.5v22.3zm18.7 0H71.3V149c0-1.4-1.2-2.5-2.5-2.5H50.4c-1.4 0-2.5 1.2-2.5 2.5v25.2H34.4V52.9c0-1.6 1.3-2.9 3-2.9h44.2c1.6 0 3 1.3 3 2.9l-.2 121.2zm-3-128.6H55.9V28.8c0-1.6 1.3-2.9 3-2.9h60.3c1.6 0 3 1.3 3 2.9v19.4h-35c-1.5-1.6-3.6-2.7-5.8-2.7zm40.6 7.2V67H89V52.7h33zM106.8 175H89v-63.4h17.9c-.1 0-.1 63.4-.1 63.4zm0-68.7H89V92h17.9c-.1 0-.1 14.3-.1 14.3zm0-29.9v10.2H89V72.3h19c-.7 1.2-1.2 2.6-1.2 4.1zm59.9 97.7h-55.3v-98c0-1.6 1.3-2.9 3-2.9h49.5c1.6 0 3 1.3 3 2.9l-.2 98z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M64.2 60.7h-9.6c-.8 0-1.4.6-1.4 1.4v9.6c0 .8.6 1.4 1.4 1.4h9.7c.8 0 1.4-.6 1.4-1.4v-9.6c0-.7-.7-1.4-1.5-1.4z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M64.3 81.2h-9.7c-.8 0-1.4.6-1.4 1.4v9.6c0 .8.6 1.4 1.4 1.4h9.7c.8 0 1.4-.6 1.4-1.4v-9.6c0-.7-.6-1.4-1.4-1.4z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M64.3 101.8h-9.7c-.8 0-1.4.6-1.4 1.4v9.6c0 .8.6 1.4 1.4 1.4h9.7c.8 0 1.4-.6 1.4-1.4v-9.7c0-.6-.6-1.3-1.4-1.3z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M64.3 122.3h-9.7c-.8 0-1.4.6-1.4 1.4v9.6c0 .8.6 1.4 1.4 1.4h9.7c.8 0 1.4-.6 1.4-1.4v-9.6c0-.7-.6-1.4-1.4-1.4z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M154.6 85.7h-9.7c-.8 0-1.4.6-1.4 1.4v9.6c0 .8.6 1.4 1.4 1.4h9.7c.8 0 1.4-.6 1.4-1.4V87c.1-.7-.6-1.3-1.4-1.3z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M134 85.7h-9.7c-.8 0-1.4.6-1.4 1.4v9.6c0 .8.6 1.4 1.4 1.4h9.7c.8 0 1.4-.6 1.4-1.4v-9.6c.1-.8-.6-1.4-1.4-1.4z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M154.6 107.1h-9.7c-.8 0-1.4.6-1.4 1.4v9.6c0 .8.6 1.4 1.4 1.4h9.7c.8 0 1.4-.6 1.4-1.4v-9.7c.1-.5-.6-1.3-1.4-1.3z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M134 107.1h-9.7c-.8 0-1.4.6-1.4 1.4v9.6c0 .8.6 1.4 1.4 1.4h9.7c.8 0 1.4-.6 1.4-1.4v-9.7c.1-.5-.6-1.3-1.4-1.3z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M154.6 129.5h-9.7c-.8 0-1.4.6-1.4 1.4v9.6c0 .8.6 1.4 1.4 1.4h9.7c.8 0 1.4-.6 1.4-1.4v-9.7c.1-.7-.6-1.3-1.4-1.3z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M134 129.5h-9.7c-.8 0-1.4.6-1.4 1.4v9.6c0 .8.6 1.4 1.4 1.4h9.7c.8 0 1.4-.6 1.4-1.4v-9.6c.1-.8-.6-1.4-1.4-1.4z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <h1 class=\"h1 position-absolute svg-bottom-text\" style=\"font-size: 20px; color:rgba(76, 218, 100) !important; \">\r\n          Hotels & Businesses\r\n        </h1>\r\n      </div>\r\n      <div class=\"col-12 col-md-2 position-relative\">\r\n        <div class=\" text-white\" style=\"opacity: 1;\">\r\n          <svg height=\"60%\" width=\"60%\" preserveAspectRatio=\"xMidYMid meet\" id=\"comp-kevhd4o5svgcontent\"\r\n            data-bbox=\"33 39 134 122\" viewBox=\"33 39 134 122\" xmlns=\"http://www.w3.org/2000/svg\" data-type=\"color\"\r\n            role=\"img\">\r\n            <g>\r\n              <path\r\n                d=\"M79.609 140.667h-5.826v-5.81a2.913 2.913 0 0 0-2.913-2.905H59.217a2.912 2.912 0 0 0-2.913 2.905v5.81h-5.826v-5.81c0-4.805 3.92-8.714 8.739-8.714H70.87c4.819 0 8.739 3.909 8.739 8.714v5.81z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M114.565 140.667h-5.826v-5.81a2.912 2.912 0 0 0-2.913-2.905H94.174a2.912 2.912 0 0 0-2.913 2.905v5.81h-5.826v-5.81c0-4.805 3.92-8.714 8.739-8.714h11.652c4.819 0 8.739 3.909 8.739 8.714v5.81z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M149.522 140.667h-5.826v-5.81a2.912 2.912 0 0 0-2.913-2.905H129.13a2.912 2.912 0 0 0-2.913 2.905v5.81h-5.826v-5.81c0-4.805 3.92-8.714 8.739-8.714h11.652c4.819 0 8.739 3.909 8.739 8.714v5.81z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M62.13 161h-5.826v-5.81a2.913 2.913 0 0 0-2.913-2.905H41.739a2.912 2.912 0 0 0-2.913 2.905V161H33v-5.81c0-4.805 3.92-8.714 8.739-8.714h11.652c4.819 0 8.739 3.909 8.739 8.714V161z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M97.087 161h-5.826v-5.81a2.913 2.913 0 0 0-2.913-2.905H76.696a2.912 2.912 0 0 0-2.913 2.905V161h-5.826v-5.81c0-4.805 3.92-8.714 8.739-8.714h11.652c4.819 0 8.739 3.909 8.739 8.714V161z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M132.043 161h-5.826v-5.81a2.912 2.912 0 0 0-2.913-2.905h-11.652a2.912 2.912 0 0 0-2.913 2.905V161h-5.826v-5.81c0-4.805 3.92-8.714 8.739-8.714h11.652c4.819 0 8.739 3.909 8.739 8.714V161z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M167 161h-5.826v-5.81a2.912 2.912 0 0 0-2.913-2.905h-11.652a2.912 2.912 0 0 0-2.913 2.905V161h-5.826v-5.81c0-4.805 3.92-8.714 8.739-8.714h11.652c4.819 0 8.739 3.909 8.739 8.714V161z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M161.174 117.429H38.826a2.91 2.91 0 0 1-2.913-2.905V41.905A2.91 2.91 0 0 1 38.826 39h122.348a2.908 2.908 0 0 1 2.913 2.905v72.619a2.908 2.908 0 0 1-2.913 2.905zm-119.435-5.81h116.522V44.81H41.739v66.809z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <h1 class=\"h1 position-absolute svg-bottom-text\" style=\"font-size: 20px; color:rgba(76, 218, 100) !important ;\">\r\n          Events & Attractions\r\n        </h1>\r\n      </div>\r\n      <div class=\"col-12 col-md-2 position-relative\">\r\n        <div class=\" text-white\" style=\"opacity: 1;\">\r\n          <svg height=\"50%\" width=\"50%\" preserveAspectRatio=\"xMidYMid meet\" id=\"comp-kevhg5xtsvgcontent\"\r\n            data-bbox=\"32 20 136 160\" viewBox=\"32 20 136 160\" xmlns=\"http://www.w3.org/2000/svg\" data-type=\"color\"\r\n            role=\"img\">\r\n            <g>\r\n              <path\r\n                d=\"M165.4 101.3h-16.3V66.6c2 1.5 4.4 2.3 7 2.3 6.5 0 11.9-5.3 11.9-11.9 0-.3-.1-.6-.2-.9l-2.2-5.5-8.2-28.8c-.3-1.1-1.3-1.8-2.4-1.8H44.3c-1.1 0-2.1.7-2.4 1.8l-9.4 32.9c-.1.2-.1.4-.1.5l-.3 1c-.1.3-.1.6-.1.8 0 6.5 5.3 11.9 11.9 11.9 2.5 0 4.8-.8 6.8-2.1v34.5H35c-1.4 0-2.5 1.1-2.5 2.5v73.7c0 1.4 1.1 2.5 2.5 2.5h130.4c1.4 0 2.5-1.1 2.5-2.5v-73.7c0-1.4-1.2-2.5-2.5-2.5zm-35.2-48.4V25h13.5v27.9h-13.5zm-5 0h-13.5V25h13.5v27.9zm-18.5 0H93.1V25h13.5v27.9zm-18.6 0H74.6V25h13.5v27.9zm-18.5 0H56V25h13.5v27.9zm-.3 5c-.4 3.4-3.3 6-6.8 6s-6.4-2.6-6.8-6h13.6zm18.6 0c-.4 3.4-3.3 6-6.8 6s-6.4-2.6-6.8-6h13.6zm18.7 0c-.4 3.4-3.3 6-6.8 6s-6.4-2.6-6.8-6h13.6zm18.6 0c-.4 3.4-3.3 6-6.8 6s-6.4-2.6-6.8-6h13.6zm18.7 0c-.4 3.4-3.3 6-6.8 6s-6.4-2.6-6.8-6h13.6zm12.2 6c-3.5 0-6.4-2.6-6.8-6h13.6c-.4 3.4-3.3 6-6.8 6zm4.9-11h-12.2V25h4.3l7.9 27.9zM46.2 25H51v27.9H38.5l-.2-.1L46.2 25zm-2.3 38.9c-3.5 0-6.4-2.6-6.8-6h13.6c-.5 3.4-3.4 6-6.8 6zm11.7 2.8c1.9 1.4 4.3 2.2 6.9 2.2 3.8 0 7.1-1.8 9.3-4.5 2.2 2.8 5.5 4.5 9.3 4.5s7.1-1.8 9.3-4.5c2.2 2.8 5.5 4.5 9.3 4.5 3.8 0 7.1-1.8 9.3-4.5 2.2 2.8 5.5 4.5 9.3 4.5 3.8 0 7.1-1.8 9.3-4.5 2.2 2.8 5.5 4.5 9.3 4.5 2.6 0 5-.9 7-2.3v34.7H55.6V66.7zm107.3 39.6v11.3H37.5v-11.3h125.4zM56 122.6h13.5v51.2c0 .4.1.8.3 1.2H55.7c.2-.4.3-.7.3-1.2v-51.2zm18.6 51.2v-51.2h13.5v51.2c0 .4.1.8.3 1.2H74.3c.2-.4.3-.8.3-1.2zm18.5 0v-51.2h13.5v51.2c0 .4.1.8.3 1.2H92.8c.2-.4.3-.8.3-1.2zm18.6 0v-51.2h13.5v51.2c0 .4.1.8.3 1.2h-14.2c.3-.4.4-.8.4-1.2zm18.5 0v-51.2h13.5v51.2c0 .4.1.8.3 1.2h-14.2c.3-.4.4-.8.4-1.2zm-92.7 0v-51.2H51v51.2c0 .4.1.8.3 1.2H37.5v-1.2zm125.4 1.2h-14.4c.2-.4.3-.7.3-1.2v-51.2h14.1V175z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <h1 class=\"h1  position-absolute svg-bottom-text\"\r\n          style=\"font-size: 20px; color:rgba(76, 218, 100) !important; ;\">\r\n          Shopping & Dining\r\n        </h1>\r\n      </div>\r\n      <div class=\"col-12 col-md-2 position-relative\">\r\n        <div class=\" text-white\" style=\"opacity: 1;\">\r\n          <svg height=\"70%\" width=\"70%\" preserveAspectRatio=\"xMidYMid meet\" id=\"comp-kevhhq17svgcontent\"\r\n            data-bbox=\"28.001 52.001 143.998 95.998\" viewBox=\"28.001 52.001 143.998 95.998\"\r\n            xmlns=\"http://www.w3.org/2000/svg\" data-type=\"color\" role=\"img\" aria-labelledby=\"comp-kevhhq17-svgtitle\">\r\n            <title id=\"comp-kevhhq17-svgtitle\"></title>\r\n            <g>\r\n              <path\r\n                d=\"M162.999 133h-6v-6h6c1.655 0 3-1.351 3-3.01v-20.361c0-2.408-1.011-3.628-3-3.628h-4.764l-11.071-19.923c-.415-.589-1.341-1.078-2.334-1.078H121v-6h23.83a8.996 8.996 0 0 1 7.435 3.927L161.763 94h1.236c5.382 0 9 3.869 9 9.628v20.361c0 4.969-4.037 9.011-9 9.011z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path fill=\"#fff\" d=\"M124 133H76v-6h42V58H70v-5.999h54V133z\" data-color=\"1\"></path>\r\n              <path fill=\"#fff\" d=\"M52.001 127v6h-15v-6h15z\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M144.973 147.999c-8.285 0-15.026-6.718-15.026-14.973s6.741-14.973 15.026-14.973 15.026 6.718 15.026 14.973-6.741 14.973-15.026 14.973zm0-23.947c-4.977 0-9.026 4.025-9.026 8.974 0 4.948 4.049 8.974 9.026 8.974 4.977 0 9.026-4.025 9.026-8.974 0-4.948-4.048-8.974-9.026-8.974z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path\r\n                d=\"M64.027 147.999c-8.285 0-15.026-6.718-15.026-14.973s6.741-14.973 15.026-14.973 15.026 6.718 15.026 14.973-6.741 14.973-15.026 14.973zm0-23.947c-4.977 0-9.026 4.025-9.026 8.974 0 4.948 4.049 8.974 9.026 8.974s9.026-4.025 9.026-8.974c0-4.948-4.049-8.974-9.026-8.974z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n              <path fill=\"#fff\" d=\"M133 127v6h-12v-6h12z\" data-color=\"1\"></path>\r\n              <path fill=\"#fff\" d=\"M150.999 103H127v-6h17.399l-4.896-7.339 4.993-3.331 6.503 9.752V103z\" data-color=\"1\">\r\n              </path>\r\n              <path fill=\"#fff\" d=\"M79 88v6H28.001v-6H79z\" data-color=\"1\"></path>\r\n              <path fill=\"#fff\" d=\"M97.001 70v6h-45v-6h45z\" data-color=\"1\"></path>\r\n              <path fill=\"#fff\" d=\"M46.001 70v6h-6v-6h6z\" data-color=\"1\"></path>\r\n              <path fill=\"#fff\" d=\"M64 52.001v6h-6v-6h6z\" data-color=\"1\"></path>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <h1 class=\"h1  position-absolute svg-bottom-text\"\r\n          style=\"font-size: 20px; color:rgba(76, 218, 100) !important; ;\">\r\n          Trucks, Trailers, & Fleet Vehicles\r\n        </h1>\r\n      </div>\r\n      <div class=\"col-12 col-md-2 position-relative\">\r\n        <div class=\" text-white\" style=\"opacity: 1;\">\r\n          <svg height=\"70%\" width=\"70%\" preserveAspectRatio=\"xMidYMid meet\" id=\"comp-kevhktk4svgcontent\"\r\n            data-bbox=\"12.5 31.5 175 137\" viewBox=\"12.5 31.5 175 137\" xmlns=\"http://www.w3.org/2000/svg\"\r\n            data-type=\"color\" role=\"img\" aria-labelledby=\"comp-kevhktk4-svgtitle\">\r\n            <title id=\"comp-kevhktk4-svgtitle\"></title>\r\n            <g>\r\n              <path\r\n                d=\"M187.5 82.9l-21.8-19.4V45h-4.6v14.4L130 31.7 107.3 52l-7.3-6.5-7.5 6.7-23.1-20.7-56.9 50.8 3.1 3.4 9.1-8.1v77.1h30.6v13.8h90v-13.8h30.1V78.2l9.1 8.1 3-3.4zM29.3 150.1V73.5l40.1-35.8 19.7 17.6-46 41 3.1 3.4 9.1-8.1v58.6l-26-.1zm30.6 13.8V87.4L100 51.6l31.1 27.7v.2h.3l9.3 8.3v76l-80.8.1zm110.8-13.8h-25.5V92l9.1 8.1 3.1-3.4-21.8-19.4V58.8H131v14.4l-20.3-18.1L130 37.8l31.1 27.7v.2h.3l9.3 8.3v76.1z\"\r\n                fill=\"#fff\" data-color=\"1\"></path>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <h1 class=\"h1 position-absolute svg-bottom-text\"\r\n          style=\"font-size: 20px; color:rgba(76, 218, 100) !important; ;\">\r\n          Property Management\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"container p-3\" style=\"background-color: #4919db;margin-top: 50px;margin-bottom: 50px;\">\r\n    <div class=\"p-2\">\r\n      <div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 col-md-5 pl-3\">\r\n            <h1 class=\"h1 mt-4 text-white\">Edyoos For Businesses\r\n            </h1>\r\n            <h2 class=\"h2 text-white text-center\"\r\n              style=\"color:rgba(76, 218, 100) !important;font-size:24px;letter-spacing: 4px;\">#1 In Revenue Retention\r\n            </h2>\r\n            <div style=\"width: 90%;height: 4px;background-color: #fff;\" class=\"mx-auto my-2\"></div>\r\n            <p class=\"h3 text-white \" style=\"font-size: 20px;\">\r\n              To learn more about how Edyoos can help you increase your profits and streamline your parking management,\r\n              contact us or fill out the form to request more information.\r\n            </p>\r\n            <div class=\"text-light py-4 text-left mx-auto\">\r\n              <span>Phone: <a class=\"text-decoration-underline ml-2\" href=\"tel:844-633-9667\"> 844-633-9667</a></span>\r\n              <br>\r\n              <span>Email: <a class=\"text-decoration-underline ml-2\"\r\n                  href=\"mailto:support@edyoos.com\">support@edyoos.com</a></span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 col-md-7 py-5\" style=\"background-color: #fff;border-radius: 15px;\">\r\n            <h1 class=\"h1 font-weight-bold text-center py-2\" style=\"font-size: 30px;color: #000;\">\r\n              Get Started With Edyoos\r\n            </h1>\r\n            <form [formGroup]=\"emailUsFormGroup\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12 col-md-8 mx-auto\">\r\n                  <div class=\"form-content\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                          <input class=\"form-control form-control-lg\" type=\"text\" formControlName=\"firstName\"\r\n                            placeholder=\"First Name\" required (blur)=\"logValidationErrors()\" />\r\n                          <div *ngIf=\"formErrors.firstName\" class=\"text-danger\">\r\n                            {{formErrors.firstName}}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                          <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"lastName\"\r\n                            placeholder=\"Last Name\" (blur)=\"logValidationErrors()\" />\r\n                          <div *ngIf=\"formErrors.lastName\" class=\"text-danger\">\r\n                            {{formErrors.lastName}}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                          <input class=\"form-control form-control-lg\" type=\"email\" formControlName=\"email\"\r\n                            placeholder=\"Email\" (blur)=\"logValidationErrors()\" />\r\n                          <div *ngIf=\"formErrors.email\" class=\"text-danger\">\r\n                            {{formErrors.email}}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-6\">\r\n                        <div class=\"form-group\">\r\n                          <input class=\"form-control form-control-lg\" type=\"text\" formControlName=\"phone\"\r\n                            placeholder=\"Phone\" (blur)=\"logValidationErrors()\" />\r\n                          <div *ngIf=\"formErrors.phone\" class=\"text-danger\">\r\n                            {{formErrors.phone}}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-12\">\r\n                        <textarea placeholder=\"Message\" formControlName=\"message\" id=\"exampleFormControlTextarea1\"\r\n                          (blur)=\"logValidationErrors()\" class=\"form-control\" id=\"exampleFormControlTextarea1\"\r\n                          rows=\"3\"></textarea>\r\n                        <div *ngIf=\"formErrors.message\" class=\"text-danger\">\r\n                          {{formErrors.message}}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-group text-center mt-2\">\r\n                      <button class=\"btn btn-login\" (click)=\"sendMessage()\" [disabled]=\"emailUsFormGroup.invalid\">Send\r\n                        Message</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-refund',\r\n  templateUrl: './refund.component.html',\r\n  styleUrls: ['./refund.component.scss']\r\n})\r\nexport class RefundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"landing-page-wrapper\">\r\n    <app-nav-bar-new></app-nav-bar-new>\r\n    <div class=\"container\">\r\n      <div class=\"head-container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"search-container search-container-refund\">\r\n              <div class=\"refund-header\">Edyoos Refunds and Cancelation</div>\r\n                <div class=\"search-container search-container-refund-bx\">\r\n                  <p>In the event you need to cancel your reservation, Edyoos will refund the total amount to the payment method provided at checkout. It may take up to 15 days for your account to be credited. You may change or cancel any future reservation, depending on availability, until 1 hour prior to the start of your reservation. </p>\r\n                  <p>Parking space owners may invoke their own cancelation policy if they so choose. If the parking space owner has a separate cancelation policy, it will be outlined in full detail under that space's information section. If the parking space owner has not listed a refund or cancelation policy, the Edyoos Refund and Cancelation policy will become the default. </p>\r\n                  <p>Terms and conditions are subject to change. Please contact our customer support team with any questions at&nbsp;<span style=\"text-decoration:underline;\"><a href=\"mailto:park@edyoos.com\" target=\"_self\" data-content=\"park@edyoos.com\" data-type=\"mail\">park@edyoos.com</a></span>&nbsp;or 844-633-9667.</p>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport swal from 'sweetalert2';\r\nimport { ApiResponse } from 'src/app/model/apiresponse.model';\r\nimport { LoginService } from '../../shared/authentication/login/login.service';\r\nimport { ResetPassword } from 'src/app/model/login/reset_password.model';\r\nimport { ErrorModel } from 'src/app/model/login/error.model';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  resetPasswordForm: FormGroup;\r\n  submitted: boolean = false;\r\n  httpError:string;\r\n  submitBtnDisable:boolean=false;\r\n  resetPassword: ResetPassword = new ResetPassword();\r\n\r\n\r\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router,private loginService:LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.resetPasswordForm = this.fb.group({\r\n      passwordGroup: this.fb.group({\r\n        password: ['', Validators.required],\r\n        passwordConfirmation: ['', [Validators.required]]\r\n      }, { validator: matchPassword }),\r\n    });\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      debugger\r\n      this.resetPassword.Email = params['email'];\r\n      this.resetPassword.Token = params['token'];\r\n    });\r\n\r\n    this.resetPasswordForm.valueChanges.subscribe((data) => {\r\n      this.logValidationErrors(this.resetPasswordForm);\r\n    })\r\n\r\n  }\r\n\r\n  formErrors = {\r\n    password: '',\r\n    passwordConfirmation:'',\r\n    passwordGroup: ''\r\n  };\r\n\r\n  validationMessages = {\r\n    password: {\r\n      required: 'Password is required.'\r\n     \r\n    },\r\n    passwordConfirmation:{\r\n      required: 'Confirm Password is required.',\r\n      passwordMismatch: 'Password and Confirm Password do not match.'\r\n    },\r\n    passwordGroup: {\r\n      passwordMismatch: 'Password and Confirm Password do not match.'\r\n    }\r\n\r\n  };\r\n  showSwal(title) {\r\n   \r\n      swal({\r\n        title: title,\r\n        // text: \"You clicked the button!\",\r\n        buttonsStyling: false,\r\n        confirmButtonClass: \"btn btn-fill btn-success\",\r\n        type: \"success\"\r\n\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.router.navigate(['pages/login']);\r\n        }\r\n        else {\r\n          this.router.navigate(['pages/login']);\r\n        }\r\n      });\r\n  }\r\n\r\n  logValidationErrors(group: FormGroup = this.resetPasswordForm): void {\r\n\r\n    Object.keys(group.controls).forEach((key: string) => {\r\n      const abstractControl = group.get(key);\r\n      this.formErrors[key] = '';\r\n\r\n      if (abstractControl && !abstractControl.valid) {\r\n        const messages = this.validationMessages[key];\r\n        for (const errorKey in abstractControl.errors) {\r\n          \r\n          if (errorKey) {\r\n            this.formErrors[key] += messages[errorKey] + ' ';\r\n          }\r\n        }\r\n      }\r\n      if (abstractControl instanceof FormGroup) {\r\n        this.logValidationErrors(abstractControl);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    if (this.resetPasswordForm.invalid) {\r\n      this.logValidationErrors(this.resetPasswordForm);\r\n    }\r\n    else {\r\n      this.submitBtnDisable=true;\r\n      this.resetPassword.Password=this.resetPasswordForm.get('passwordGroup').get('password').value;\r\n\r\n      this.loginService.resetPassword(this.resetPassword).subscribe((response: ApiResponse<string>) => {\r\n        this.submitBtnDisable=false;\r\n        if (response.data) {        \r\n          this.showSwal(response.data);\r\n        }\r\n       \r\n      },(error)=>{\r\n        this.submitBtnDisable=false;\r\n        this.httpError=error;\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\nfunction matchPassword(group: AbstractControl): { [key: string]: any } | null {\r\n\r\n  const passwordControl = group.get('password');\r\n  const confirmPasswordControl = group.get('passwordConfirmation');\r\n\r\n  if (passwordControl.value === confirmPasswordControl.value || confirmPasswordControl.pristine) {\r\n    confirmPasswordControl.setErrors(null);\r\n    return null;\r\n  } else {\r\n    confirmPasswordControl.setErrors({'passwordMismatch': true});\r\n    return { 'passwordMismatch': true };\r\n  }\r\n}","<!-- <div class=\"wrapper wrapper-full-page\">\r\n    <div class=\"full-page login-page\" data-color=\"azure\" data-image=\"../../../assets/img/full-screen-image-1.jpg\">\r\n\r\n        <div class=\"content\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\">\r\n                        <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n                            <div class=\"card\">\r\n                                <div class=\"header text-center\">Reset Password</div>\r\n                                <div class=\"content\">\r\n\r\n                                    <div formGroupName=\"passwordGroup\">\r\n                                        <div class=\"form-group\"\r\n                                            [ngClass]=\"{'has-error': submitted && formErrors.password}\">\r\n                                            <label for=\"password\">Password<span class=\"star\">*</span></label>\r\n\r\n                                            <input type=\"password\" placeholder=\"Password\"\r\n                                                validateEqual=\"confirmPassword\" formControlName=\"password\" id=\"password\"\r\n                                                class=\"form-control form-rounded\">\r\n                                            <small *ngIf=\"submitted && formErrors.password\" class=\"text-danger\">\r\n                                                {{formErrors.password}}\r\n                                            </small>\r\n                                        </div>\r\n\r\n                                        <div class=\"form-group\" [ngClass]=\"{'has-error': submitted &&  (formErrors.passwordConfirmation\r\n                                    || formErrors.passwordGroup)}\">\r\n                                            <label for=\"passwordConfirmation\">Password\r\n                                                Confirmation<span class=\"star\">*</span></label>\r\n\r\n                                            <input type=\"password\" validateEqual=\"password\"\r\n                                                placeholder=\"Password Confirmation\" id=\"passwordConfirmation\"\r\n                                                formControlName=\"passwordConfirmation\"\r\n                                                class=\"form-control form-rounded\">\r\n                                            <small\r\n                                                *ngIf=\"submitted && (formErrors.passwordConfirmation || formErrors.passwordGroup)\"\r\n                                                class=\"text-danger\">\r\n                                                {{formErrors.passwordConfirmation ? formErrors.passwordConfirmation\r\n                                                        : formErrors.passwordGroup}}\r\n                                            </small>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"footer text-center\">\r\n                                    <button type=\"submit\" [disabled]=\"submitBtnDisable\"\r\n                                        class=\"btn btn-fill btn-danger btn-wd\">Submit</button>\r\n\r\n                                    <div class=\"text-danger text-left\">\r\n                                        <ul *ngFor=\"let error of errors\">\r\n                                            <li>{{error.message}}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div> -->\r\n\r\n\r\n\r\n<div class=\"container\">\r\n    <div class=\"row justify-content-md-center mt-5\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    Reset Password\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n                        <div formGroupName=\"passwordGroup\">\r\n\r\n                            <mat-form-field style=\"width:100%\">\r\n                                <mat-label>Password</mat-label>\r\n                                <input matInput type=\"password\" placeholder=\"Password\" (blur)=\"logValidationErrors()\" required\r\n                                validateEqual=\"confirmPassword\" formControlName=\"password\" id=\"password\">\r\n                                <mat-error>\r\n                                    {{formErrors.password}}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field style=\"width:100%\">\r\n                                <mat-label>Confirmation Password</mat-label>\r\n                                <input matInput type=\"password\" validateEqual=\"password\" (blur)=\"logValidationErrors()\"\r\n                                placeholder=\"Confirmation Password\" id=\"passwordConfirmation\" required\r\n                                formControlName=\"passwordConfirmation\">\r\n                                <mat-error>\r\n                                    {{formErrors.passwordConfirmation ? formErrors.passwordConfirmation\r\n                                        : formErrors.passwordGroup}}\r\n                                </mat-error>\r\n                             \r\n                            </mat-form-field>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"text-center\">\r\n                            <button type=\"submit\" [disabled]=\"submitBtnDisable || resetPasswordForm.invalid\"\r\n                                class=\"btn btn-fill btn-danger\">\r\n                                <span class=\"spinner-border spinner-border-sm\" *ngIf=\"submitBtnDisable\" role=\"status\" aria-hidden=\"true\"></span>\r\n                               {{submitBtnDisable?'Loading...':'Reset'}} \r\n                                \r\n                            </button>\r\n                            <div class=\"text-danger mt-2\">\r\n                                {{httpError}}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { Component, OnInit, ElementRef, NgZone } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { RegisterService } from '../../shared/authentication/register/register.service';\r\nimport { ApiResponse } from 'src/app/model/apiresponse.model';\r\nimport { UserRegister } from 'src/app/model/register/register.model';\r\nimport swal from 'sweetalert2';\r\nimport { ErrorModel } from 'src/app/model/login/error.model';\r\nimport { CustomValidators } from 'src/app/helper/custom-validators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/shared/authentication/authentication.service';\r\nimport { Cart } from 'src/app/model/cart/cart.model';\r\nimport { PlacesService } from 'src/app/shared/places.service';\r\nimport { CartService } from 'src/app/shared/cart.service';\r\n\r\ndeclare var $: any;\r\ndeclare var window: any;\r\ndeclare var FB: any;\r\ndeclare var auth2: any;\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\n\r\nexport class SignupComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  httpError: any;\r\n\r\n  constructor(private fb: FormBuilder, public router: Router, private registerService: RegisterService\r\n    ,private authenticationService: AuthenticationService,private placesService: PlacesService\r\n    ,private cartService:CartService,public zone: NgZone) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.registerForm = this.fb.group({\r\n      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20)]],\r\n      lastName: ['', [Validators.required, Validators.maxLength(20)]],\r\n      email: ['', [Validators.required, Validators.email\r\n        //  Validators.pattern(\"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$\")\r\n      ]],\r\n      passwordGroup: this.fb.group({\r\n        password: [\r\n          null,\r\n          Validators.compose([\r\n            Validators.required,\r\n            // check whether the entered password has a number\r\n            CustomValidators.patternValidator(/\\d/, {\r\n              hasNumber: true\r\n            }),\r\n            // check whether the entered password has upper case letter\r\n            CustomValidators.patternValidator(/[A-Z]/, {\r\n              hasCapitalCase: true\r\n            }),\r\n            // check whether the entered password has a lower case letter\r\n            CustomValidators.patternValidator(/[a-z]/, {\r\n              hasSmallCase: true\r\n            }),\r\n            // check whether the entered password has a special character\r\n            CustomValidators.patternValidator(\r\n              /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/,\r\n              {\r\n                hasSpecialCharacters: true\r\n              }\r\n            ),\r\n            Validators.minLength(8)\r\n          ])\r\n        ],\r\n        passwordConfirmation: ['', Validators.required]\r\n      }, { validator: CustomValidators.matchPassword }),\r\n      iAgree: [false, Validators.requiredTrue],\r\n      subscribeNewsLetter: [false]\r\n\r\n    });\r\n\r\n    this.registerForm.valueChanges.subscribe((data) => {\r\n      this.logValidationErrors(this.registerForm);\r\n    })\r\n\r\n  }\r\n\r\n  formErrors = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    passwordGroup: '',\r\n    iAgree: '',\r\n    subscribeNewsLetter: ''\r\n  };\r\n\r\n  // This object contains all the validation messages for this form\r\n  validationMessages = {\r\n    firstName: {\r\n      required: 'Full Name is required.',\r\n      minlength: 'Full Name must be greater than 2 characters.',\r\n      maxlength: 'Full Name must be less than 20 characters.'\r\n    },\r\n    lastName: {\r\n      required: 'LastName is required.',\r\n      maxlength: 'Last Name must be less than 20 characters.'\r\n    },\r\n    email: {\r\n      required: 'Email is required!',\r\n      email: 'Enter a valid email address!'\r\n    },\r\n    password: {\r\n      required: \"Password is required\",\r\n      minlength: \"Must be at least 8 characters!\",\r\n      hasNumber: \"Must contain at least 1 number!\",\r\n      hasCapitalCase: \"Must contain at least 1 in Capital Case!\",\r\n      hasSmallCase: \"Must contain at least 1 Letter in Small Case!\",\r\n      hasSpecialCharacters: \"Must contain at least 1 Special Character!\"\r\n    },\r\n    passwordConfirmation: {\r\n      required: 'Confirm Password  is required.',\r\n      passwordMismatch: 'Password and Confirm Password do not match.'\r\n    },\r\n    passwordGroup: {\r\n      passwordMismatch: 'Password and Confirm Password do not match.'\r\n    },\r\n    iAgree: {\r\n      required: 'I agree is required.'\r\n    },\r\n    subscribeNewsLetter: {\r\n      required: 'Subscribe to news letter is required.'\r\n    }\r\n  };\r\n//google login\r\n\r\n  googleLogin() {\r\n    auth2.grantOfflineAccess()\r\n        .then((result) => this.signInCallback(result));\r\n\r\n    // auth2.signIn().then((result) => this.signInCallback(result));\r\n}\r\n\r\nsignInCallback(authResult) {\r\n   \r\n    var params = {\r\n        Code: authResult.code,\r\n        ReturnUrl: window.location.origin,\r\n        GrantType: \"authorization_code\"\r\n    }\r\n\r\n    this.authenticationService.externalGoogleLogin(params).subscribe((response) => {\r\n   \r\n        this.setlocalStorageAndGetCartDetails(response);\r\n\r\n    }, (error) => {\r\n        console.log(error);\r\n    })\r\n}\r\n\r\n  //FB login\r\n\r\n  facebookLogin() {\r\n    FB.login((response) => {\r\n        this.statusChangeCallback(response);\r\n    }, { scope: 'public_profile,email' });\r\n}\r\nstatusChangeCallback(response) {                   \r\n  if (response.status === 'connected') {   \r\n\r\n      this.externalLogin(response.authResponse.accessToken);\r\n  } \r\n}\r\nexternalLogin(accessToken: string) {\r\n  this.authenticationService.externalFacebookLogin(accessToken).subscribe((response) => {\r\n      this.setlocalStorageAndGetCartDetails(response);\r\n\r\n  }, (error) => {\r\n      console.log(error);\r\n\r\n  })\r\n}\r\n\r\ngetCartDetails() {\r\n  this.cartService.getCartDetails().subscribe((response) => {\r\n      this.placesService.cartPropertyGroup = response.data;\r\n      localStorage.setItem('bookedPlaces', JSON.stringify(this.placesService.cartPropertyGroup));\r\n  }, (error) => {\r\n      console.log(error);\r\n\r\n  })\r\n}\r\n\r\nsetlocalStorageAndGetCartDetails(response) {\r\n  this.authenticationService.setUserValue(response.data);\r\n\r\n  let cart: Cart[] = [];\r\n\r\n  if (this.placesService.cartPropertyGroup.length > 0) {\r\n\r\n      this.placesService.cartPropertyGroup.forEach((val, index) => {\r\n          let cartDetails = new Cart();\r\n          val.PropertyGroupID = cartDetails.PropertyGroupID;\r\n          cart.push(cartDetails);\r\n      });\r\n\r\n      this.cartService.addCart(cart).subscribe((response) => {\r\n          console.log(response.data);\r\n\r\n          this.getCartDetails();\r\n\r\n          this.zone.run(() => {\r\n            this.router.navigate(['landing/home']);\r\n        });\r\n\r\n      }, (error) => {\r\n          console.log(error);\r\n\r\n      })\r\n  }\r\n  else {\r\n      this.getCartDetails();\r\n      this.zone.run(() => {\r\n                  this.router.navigate(['landing/home']);\r\n              });\r\n  }\r\n}\r\n\r\n\r\n  logValidationErrors(group: FormGroup = this.registerForm): void {\r\n\r\n    Object.keys(group.controls).forEach((key: string) => {\r\n      const abstractControl = group.get(key);\r\n      this.formErrors[key] = '';\r\n\r\n      if (abstractControl && !abstractControl.valid && abstractControl.touched) {\r\n        const messages = this.validationMessages[key];\r\n        \r\n        for (const errorKey in abstractControl.errors) {\r\n          if (errorKey) {\r\n            if (this.formErrors[key] == '')\r\n              this.formErrors[key] += messages[errorKey] + ' ';\r\n          }\r\n        }\r\n      }\r\n\r\n      if (abstractControl instanceof FormGroup) {\r\n        this.logValidationErrors(abstractControl);\r\n      }\r\n    });\r\n  }\r\n  openPrivacyNewWindow() {\r\n    window.open('#/privacy',\r\n      '_blank',\r\n      'width=500,height=500,top=' + 0 + ', left=' + 0);\r\n  }\r\n  openTermsNewWindow() {\r\n    window.open('#/terms-and-conditions',\r\n      '_blank',\r\n      'width=500,height=500,top=' + 0 + ', left=' + 0);\r\n  }\r\n \r\n\r\n  public get getPasswordControl() {\r\n    return this.registerForm.get('passwordGroup').get('password');\r\n  }\r\n  marksAsTouched() {\r\n    this.registerForm.get('iAgree').markAsTouched();\r\n  }\r\n\r\n  showSwal(text) {\r\n    swal({\r\n      title: \"Registration Successful\",\r\n      text: text,\r\n      buttonsStyling: false,\r\n      confirmButtonClass: \"btn btn-fill btn-success\",\r\n      type: \"success\"\r\n\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.router.navigate(['pages/login']);\r\n      }\r\n      else {\r\n        this.router.navigate(['pages/login']);\r\n      }\r\n    });\r\n  }\r\n  submitBtnClicked: boolean = false;\r\n  onSubmit(): void {\r\n\r\n    if (this.registerForm.invalid) {\r\n      this.logValidationErrors(this.registerForm)\r\n\r\n    }\r\n    else {\r\n      this.submitBtnClicked = true;\r\n      let registerUser = new UserRegister();\r\n      registerUser.FirstName = this.registerForm.get('firstName').value;\r\n      registerUser.LastName = this.registerForm.get('lastName').value;\r\n      registerUser.Email = this.registerForm.get('email').value;\r\n      registerUser.Password = this.registerForm.get('passwordGroup').get('password').value;\r\n      registerUser.SubscribeToNewsLetter = this.registerForm.get('subscribeNewsLetter').value;\r\n      registerUser.IAgree = this.registerForm.get('iAgree').value;\r\n      registerUser.ReturnUrl = `${window.location.origin}/#/pages/emailconfirm`;\r\n      registerUser.FromClient = true;\r\n      this.registerService.RegisterUser(registerUser).subscribe((response: ApiResponse<string>) => {\r\n\r\n        if (response.data) {\r\n          this.showSwal(response.data);\r\n        }\r\n\r\n      }, (error) => {\r\n        this.submitBtnClicked = false;\r\n        this.httpError = error;\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n\r\n","<!-- <app-nav-bar></app-nav-bar>\r\n<div class=\"wrapper wrapper-full-page\">\r\n    <div class=\"full-page login-page\">\r\n        <div class=\"content\">\r\n            <div class=\"container\">\r\n                <div class=\"row justify-content-center\">\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"row sign-container justify-content-end no-gutters\">\r\n                            <div class=\"col-md-6\">\r\n                                <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                                    <div class=\"form-card\">\r\n                                        <div class=\"form-card-grid\">\r\n                                            <h2>Sign up</h2>\r\n                                            <div class=\"form-content\">\r\n                                                <div class=\"form-group\">\r\n                                                    <mat-form-field>\r\n                                                        <input matInput type=\"text\" placeholder=\"First Name\"\r\n                                                            (blur)=\"logValidationErrors()\" required\r\n                                                            formControlName=\"firstName\"\r\n                                                            (blur)=\"logValidationErrors()\" />\r\n                                                        <mat-error *ngIf=\"formErrors.firstName\">\r\n                                                            {{formErrors.firstName}}\r\n                                                        </mat-error>\r\n                                                    </mat-form-field>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <mat-form-field>\r\n                                                        <input matInput type=\"text\" placeholder=\"Last Name\"\r\n                                                            formControlName=\"lastName\" required\r\n                                                            (blur)=\"logValidationErrors()\"\r\n                                                            (blur)=\"logValidationErrors()\" />\r\n                                                        <mat-error *ngIf=\"formErrors.lastName\">\r\n                                                            {{formErrors.lastName}}\r\n                                                        </mat-error>\r\n                                                    </mat-form-field>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <mat-form-field>\r\n                                                        <input matInput type=\"text\" placeholder=\"Email Address\"\r\n                                                            formControlName=\"email\" required\r\n                                                            (blur)=\"logValidationErrors()\"\r\n                                                            (blur)=\"logValidationErrors()\" />\r\n                                                        <mat-error *ngIf=\"formErrors.email\">\r\n                                                            {{formErrors.email}}\r\n                                                        </mat-error>\r\n                                                    </mat-form-field>\r\n                                                </div>\r\n                                                <div formGroupName=\"passwordGroup\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <mat-form-field>\r\n                                                            <input matInput type=\"password\" placeholder=\"Password\"\r\n                                                                formControlName=\"password\" required\r\n                                                                (blur)=\"logValidationErrors()\"\r\n                                                                (blur)=\"logValidationErrors()\" />\r\n\r\n                                                            <mat-error *ngIf=\"formErrors.password\">\r\n                                                                {{formErrors.password}}\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <mat-form-field>\r\n                                                            <input matInput type=\"password\"\r\n                                                                formControlName=\"passwordConfirmation\" required\r\n                                                                (blur)=\"logValidationErrors()\"\r\n                                                                placeholder=\"Password Confirmation\" />\r\n                                                            <mat-error\r\n                                                                *ngIf=\"(formErrors.passwordConfirmation || formErrors.passwordGroup)\">\r\n                                                                {{formErrors.passwordConfirmation ? formErrors.passwordConfirmation\r\n                                                    : formErrors.passwordGroup}}\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <input type=\"checkbox\" value=\"terms\" formControlName=\"iAgree\"\r\n                                                        id=\"signchekagree\" />\r\n                                                    <label for=\"signchekagree\">I Agree\r\n                                                        <a class=\"btn-link\" target=\"blank\" routerLink=\"/privacy\"> privacy and\r\n                                                            conditions of use\r\n                                                            notice</a>\r\n                                                    </label>\r\n\r\n                                                    <div class=\"text-danger\" *ngIf=\"formErrors.iAgree\">\r\n                                                        {{formErrors.iAgree}}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"form-group\">\r\n                                                    <input type=\"checkbox\" formControlName=\"subscribeNewsLetter\"\r\n                                                        value=\"subscribe\" id=\"rememberMe\" />\r\n                                                    <label for=\"rememberMe\">Subscribe to newsletter</label>\r\n                                                </div>\r\n                                                <div class=\"form-group my-4\">\r\n\r\n                                                    <button class=\"btn\" [disabled]=\"registerForm.invalid\">Create\r\n                                                        Account</button>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                            <div class=\"social-img\">\r\n                                                <ul>\r\n                                                    <li class=\"log-fb\">\r\n                                                        <a href=\"\"><i class=\"fa fa-facebook\"></i></a>\r\n                                                    </li>\r\n                                                    <li class=\"log-gp\">\r\n                                                        <a href=\"{{googleProviderUrl}}\">\r\n                                                            <i class=\"fa fa-google\"></i></a>\r\n                                                    </li>\r\n                                                   \r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group f12 fcorange text-center mt-4\">\r\n                                                <a (click)=\"router.navigateByUrl('pages/login')\">I Already have an\r\n                                                    account</a>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div class=\"text-danger text-left\">\r\n                                            {{httpError}}\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"d-none\">\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"p-4 mx-auto login-container\">\r\n            <h1>Register</h1>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div class=\"custom-row\">\r\n                <div class=\"checkbox col-6\">\r\n                    <label></label>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    </form>\r\n</div>\r\n<app-footer></app-footer> -->\r\n\r\n<section class=\"sign-up-page-wrapper\">\r\n    <app-nav-bar-new></app-nav-bar-new>\r\n    <div class=\"container py-5\">\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-12 col-md-7 mx-auto px-md-5 bg-light\" style=\"border-radius: 20px;\">\r\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-card\">\r\n                        <div class=\"form-card-grid\">\r\n                            <h1 class=\"h1 font-weight-bold text-center py-2\" style=\"font-size: 30px;\">Sign Up\r\n                            </h1>\r\n                            <div class=\"form-content\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <input class=\"form-control form-control-lg\" type=\"text\"\r\n                                                placeholder=\"First Name\" (blur)=\"logValidationErrors()\" required\r\n                                                formControlName=\"firstName\" (blur)=\"logValidationErrors()\" />\r\n                                            <div *ngIf=\"formErrors.firstName\" class=\"text-danger\">\r\n                                                {{formErrors.firstName}}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <input type=\"text\" class=\"form-control form-control-lg\"\r\n                                                placeholder=\"Last Name\" formControlName=\"lastName\" required\r\n                                                (blur)=\"logValidationErrors()\" (blur)=\"logValidationErrors()\" />\r\n                                            <div *ngIf=\"formErrors.lastName\" class=\"text-danger\">\r\n                                                {{formErrors.lastName}}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 my-1\">&nbsp;</div>\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <input class=\"form-control form-control-lg\" type=\"text\"\r\n                                                placeholder=\"Email Address\" formControlName=\"email\" required\r\n                                                (blur)=\"logValidationErrors()\" (blur)=\"logValidationErrors()\" />\r\n                                            <div *ngIf=\"formErrors.email\" class=\"text-danger\">\r\n                                                {{formErrors.email}}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 my-1\">&nbsp;</div>\r\n\r\n                                    <div class=\"col-6\" formGroupName=\"passwordGroup\">\r\n                                        <div class=\"form-group\">\r\n                                            <input class=\"form-control form-control-lg\" type=\"password\"\r\n                                                placeholder=\"Password\" formControlName=\"password\" required\r\n                                                (blur)=\"logValidationErrors()\" (blur)=\"logValidationErrors()\" />\r\n\r\n                                            <div *ngIf=\"formErrors.password\" class=\"text-danger\">\r\n                                                {{formErrors.password}}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-6\" formGroupName=\"passwordGroup\">\r\n                                        <div class=\"form-group\">\r\n                                            <input class=\"form-control form-control-lg\" type=\"password\"\r\n                                                formControlName=\"passwordConfirmation\" required\r\n                                                (blur)=\"logValidationErrors()\" placeholder=\"Confirm Password\" />\r\n                                            <div *ngIf=\"(formErrors.passwordConfirmation || formErrors.passwordGroup)\"\r\n                                                class=\"text-danger\">\r\n                                                {{formErrors.passwordConfirmation ? formErrors.passwordConfirmation\r\n                                        : formErrors.passwordGroup}}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 my-1\">&nbsp;</div>\r\n                                <div>\r\n                                    <input type=\"checkbox\" value=\"terms\" (click)=\"marksAsTouched()\"\r\n                                        formControlName=\"iAgree\" id=\"signchekagree\" class=\"mr-2\" />\r\n                                    <label for=\"signchekagree\">I agree to\r\n                                        <a class=\"btn-link\" (click)=\"openPrivacyNewWindow()\"> Privacy Notice</a>\r\n                                        and\r\n                                        <a class=\"btn-link\" (click)=\"openTermsNewWindow()\">Terms & Conditions </a>\r\n                                    </label>\r\n\r\n                                    <div class=\"text-danger\" *ngIf=\"formErrors.iAgree\">\r\n                                        {{formErrors.iAgree}}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"mb-2\">\r\n                                    <input type=\"checkbox\" class=\"mr-2 mb-2\" formControlName=\"subscribeNewsLetter\"\r\n                                        value=\"subscribe\" id=\"rememberMe\" />\r\n                                    <label for=\"rememberMe\">Subscribe to newsletter</label>\r\n                                </div>\r\n\r\n                                <div class=\"text-danger text-center\">\r\n                                    {{httpError}}\r\n                                </div>\r\n\r\n                                <div class=\"form-group my-4\">\r\n\r\n                                    <button class=\"btn\" [disabled]=\"registerForm.invalid || submitBtnClicked\">\r\n                                        <span class=\"spinner-border spinner-border-sm\" *ngIf=\"submitBtnClicked\"\r\n                                            role=\"status\" aria-hidden=\"true\"></span>\r\n                                        {{submitBtnClicked?'Loading...':'Sign Up'}}\r\n\r\n                                    </button>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"social-img\">\r\n                                <ul>\r\n                                    <li class=\"log-fb\">\r\n                                        <a [routerLink]=\"\" (click)=\"facebookLogin()\"><i class=\"fa fa-facebook\"></i></a>\r\n                                    </li>\r\n                                    <li class=\"log-gp\">\r\n                                        <a [routerLink]=\"\" (click)=\"googleLogin()\">\r\n                                            <i class=\"fa fa-google\"></i></a>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div class=\"form-group f14 fcorange text-center mt-4\">\r\n                                <a style=\"cursor: pointer;\" (click)=\"router.navigateByUrl('pages/login')\">I already have\r\n                                    an\r\n                                    account</a>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<app-footer></app-footer>","import { ValidationErrors, ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n  static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n      if (!control.value) {\r\n        // if control is empty return no error\r\n        return null;\r\n      }\r\n\r\n      // test the value of the control against the regexp supplied\r\n      const valid = regex.test(control.value);\r\n\r\n      // if true, return no error (no error), else return error passed in the second parameter\r\n      return valid ? null : error;\r\n    };\r\n  }\r\n\r\n  static matchPassword(group: AbstractControl): { [key: string]: any } | null {\r\n\r\n      const passwordControl = group.get('password');\r\n      const confirmPasswordControl = group.get('passwordConfirmation');\r\n    \r\n      if (passwordControl.value === confirmPasswordControl.value || confirmPasswordControl.pristine) {\r\n        return null;\r\n      } else {\r\n        confirmPasswordControl.setErrors({ 'passwordMismatch': true });\r\n        return { 'passwordMismatch': true };\r\n      }\r\n    }\r\n\r\n}","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MapsAPILoader, MouseEvent } from '@agm/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SearchService } from 'src/app/shared/search.service';\r\nimport { SearchBaseComponent } from 'src/app/search/search-page/search-base.component';\r\nimport { PlacesService } from 'src/app/shared/places.service';\r\nimport { Mode, SEARCH_FROM_METADATA } from '../main/main.component.metadata';\r\n\r\n@Component({\r\n  selector: 'app-airport-park',\r\n  templateUrl: './airport-park.component.html',\r\n  styleUrls: ['./airport-park.component.scss']\r\n})\r\nexport class AirportParkComponent extends SearchBaseComponent\r\n  implements OnInit, AfterViewInit {\r\n\r\n  displayLength;\r\n  modePlaceholder;\r\n  // vehicleLength\r\n  Mode = Mode;\r\n  // autocomplete;\r\n  // geoCoder;\r\n  // searchResult;\r\n  searchForm: FormGroup;\r\n  SEARCH_FROM_METADATA = SEARCH_FROM_METADATA;\r\n\r\n  @ViewChild('searchBar')\r\n  public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private http: HttpClient,\r\n    protected mapsAPILoader: MapsAPILoader,\r\n    private formBuilder: FormBuilder,\r\n    private searchService: SearchService,\r\n    private ngZone: NgZone,\r\n    private placeService: PlacesService\r\n  ) {\r\n    super(mapsAPILoader);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).setValue(Mode.Airport_Parking);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initializeAutoComplete();\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.formBuilder.group({\r\n      [SEARCH_FROM_METADATA.searchBar]: ['', [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleCategory]: [null, [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleLength]: ['']\r\n    });\r\n  }\r\n\r\n  initializeAutoComplete() {\r\n\r\n    this.mapsAPILoader.load().then(() => {\r\n      this.geoCoder = new google.maps.Geocoder();\r\n      let autocomplete = new google.maps.places.Autocomplete(\r\n        this.searchElementRef.nativeElement\r\n      );\r\n      autocomplete.addListener('place_changed', () => {\r\n        this.ngZone.run(() => {\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          //verify result\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n          this.searchForm\r\n            .get(SEARCH_FROM_METADATA.searchBar)\r\n            .patchValue(place.formatted_address);\r\n\r\n          this.currentLocation = {\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng(),\r\n          };\r\n\r\n\r\n          for (var i = 0; i < place.address_components.length; i++) {\r\n\r\n            var addressType = place.address_components[i].types[0];\r\n            if (this.componentForm[addressType]) {\r\n              var val = place.address_components[i][this.componentForm[addressType]];\r\n\r\n              if (addressType == 'street_number' || addressType == 'route') {\r\n                this.searchAddress.street_number = this.searchAddress.street_number ? this.searchAddress.street_number + ' ' + val :\r\n                  val;\r\n              }\r\n              else if (addressType == 'locality') {\r\n                // address.locality=address+','+val;\r\n                this.searchAddress.locality = val;\r\n              }\r\n              else if (addressType == 'administrative_area_level_1') {\r\n                // address=address+','+val;\r\n                this.searchAddress.administrative_area_level_1 = val;\r\n              }\r\n\r\n              else if (addressType == 'country') {\r\n                // address.country=address+','+val;\r\n                this.searchAddress.country = val;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.searchForm.valid) {\r\n            this.search();\r\n          }\r\n\r\n\r\n        });\r\n      });\r\n      // this function calls assignAddressInternally\r\n      this.getCurrentPosition();\r\n    });\r\n  }\r\n\r\n  searchAddress: any = {};\r\n\r\n  assignAddress(formatedAddress: any) {\r\n\r\n    // this.searchAddress = formatedAddress;\r\n\r\n    // let searchAddress: string;\r\n\r\n    // if (formatedAddress.street_number) {\r\n    //   searchAddress = formatedAddress.street_number;\r\n    // }\r\n    // if (formatedAddress.locality) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.locality;\r\n    // }\r\n    // if (formatedAddress.administrative_area_level_1) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.administrative_area_level_1;\r\n    // }\r\n    // if (formatedAddress.country) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.country;\r\n    // }\r\n\r\n    // this.searchForm\r\n    //   .get(SEARCH_FROM_METADATA.searchBar)\r\n    //   .patchValue(formatedAddress);\r\n  }\r\n\r\n\r\n  changeSearchMode(mode) {\r\n\r\n    if (mode == Mode.Boat || mode == Mode.Seaplane) {\r\n      this.displayLength = true;\r\n      this.modePlaceholder = mode;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).setValidators(Validators.required);\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n\r\n    } else {\r\n      this.displayLength = false;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).clearValidators();\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n    }\r\n\r\n  }\r\n\r\n  // isSelected(mode) {\r\n  //   if (mode == this.selectedMode) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  // onSearchChange(e) {\r\n  // debugger\r\n  // keyword = 'new'\r\n  // e.target.value = this.searchResults;\r\n  // }\r\n\r\n  search() {\r\n\r\n    this.searchService.searchText = this.searchForm.get(\r\n      SEARCH_FROM_METADATA.searchBar\r\n    ).value;\r\n\r\n    if (this.currentLocation && this.currentLocation.lat) {\r\n      const vehicleLength = this.searchForm.get(\r\n        SEARCH_FROM_METADATA.vehicleLength\r\n      ).value;\r\n\r\n      let search: any = {};\r\n      search.lat = this.currentLocation.lat;\r\n      search.lng = this.currentLocation.lng;\r\n      search.mode = this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).value;\r\n      if (this.searchAddress.street_number)\r\n        search.street = this.searchAddress.street_number;\r\n      if (this.searchAddress.locality)\r\n        search.locality = this.searchAddress.locality;\r\n      search.search = this.searchService.searchText;\r\n\r\n      if (vehicleLength) {\r\n        search.vehiclelength = vehicleLength;\r\n        this.router.navigate(['/search', search]);\r\n\r\n      } else {\r\n        this.router.navigate(['/search', search]);\r\n      }\r\n    } else {\r\n      this.router.navigateByUrl(`/search`);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"city-park-wrapper\">\r\n  <app-nav-bar-new></app-nav-bar-new>\r\n  <div class=\"container\">\r\n    <div class=\"head-container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"search-container\">\r\n          <div class=\"font-poponis search-engine-heading\">AIRPORT PARKING</div>\r\n          <p class=\"mb-md-5 text-center f18\" style=\"color: #4919db;\" >\r\n          Find Airport Parking & Amenities For Your Next Flight\r\n        </p>\r\n        <div class=\"form-group mb-0\" [formGroup]=\"searchForm\" accept-charset=\"UTF-8\" method=\"get\">\r\n          <div class=\"input-group w-100\">\r\n            <!-- <span class=\"input-group-btn col-3 px-1  mx-0\">\r\n              <select id=\"select-control\" [formControlName]=\"SEARCH_FROM_METADATA.vehicleCategory\"\r\n                (change)=\"changeSearchMode($event.target.value)\" class=\"form-control form-control-lg rounded\"\r\n                name=\"args\">\r\n                <option disabled [value]=\"null\">Type of Parking</option>\r\n                <option *ngFor=\"let vehicleCategory of Mode | keyvalue\" [value]=\"vehicleCategory.value\">\r\n                  {{vehicleCategory.key}}</option>\r\n              </select>\r\n            </span> -->\r\n            <span class=\"input-group-btn col-sm-12 col-md-9 px-1 mx-0  mb-md-0 mb-2\">\r\n              <input #searchBar type=\"text\" name=\"search\" id=\"search\" [formControlName]=\"SEARCH_FROM_METADATA.searchBar\"\r\n                placeholder=\"Search by Location or Address\" type=\"text\" class=\"form-control form-control-lg rounded\"\r\n                name=\"search-text\">\r\n            </span>\r\n            <span *ngIf=\"displayLength\" style=\"max-width: 170px;\" class=\"col-auto mx-0 px-1\">\r\n              <input type=\"text\" name=\"boat_length\" id=\"boat_length\" value=\"\"\r\n                [formControlName]=\"SEARCH_FROM_METADATA.vehicleLength\" numbersOnly\r\n                placeholder=\"{{ modePlaceholder }} length in ft\" class=\"form-control form-control-lg\" />\r\n            </span>\r\n            <span class=\"input-group-btn col-auto px-1 mx-md-0 mx-auto\">\r\n              <button data-disable-with=\"Search\" name=\"commit\" [disabled]=\"searchForm.invalid\" (click)=\"search()\"\r\n                id=\"searchbtn\" type=\"submit\" class=\"form-control rounded btn btn-search px-5 py-3\">\r\n                Search\r\n              </button> </span>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <div class=\"image-wrapper\">\r\n    <img src=\"/assets/images/bg-car-couple.png\" />\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MapsAPILoader, MouseEvent } from '@agm/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SearchService } from 'src/app/shared/search.service';\r\nimport { SearchBaseComponent } from 'src/app/search/search-page/search-base.component';\r\nimport { PlacesService } from 'src/app/shared/places.service';\r\nimport { Mode, SEARCH_FROM_METADATA } from '../main/main.component.metadata';\r\n\r\n@Component({\r\n  selector: 'app-boat-parking',\r\n  templateUrl: './boat-parking.component.html',\r\n  styleUrls: ['./boat-parking.component.scss']\r\n})\r\nexport class BoatParkingComponent extends SearchBaseComponent\r\nimplements OnInit, AfterViewInit {\r\n\r\n  displayLength;\r\n  modePlaceholder;\r\n  // vehicleLength\r\n  Mode = Mode;\r\n  // autocomplete;\r\n  // geoCoder;\r\n  // searchResult;\r\n  searchForm: FormGroup;\r\n  SEARCH_FROM_METADATA = SEARCH_FROM_METADATA;\r\n\r\n  @ViewChild('searchBar')\r\n  public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private http: HttpClient,\r\n    protected mapsAPILoader: MapsAPILoader,\r\n    private formBuilder: FormBuilder,\r\n    private searchService: SearchService,\r\n    private ngZone: NgZone,\r\n    private placeService: PlacesService\r\n  ) {\r\n    super(mapsAPILoader);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).setValue(Mode.Boat);\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initializeAutoComplete();\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.formBuilder.group({\r\n      [SEARCH_FROM_METADATA.searchBar]: ['', [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleCategory]: [null, [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleLength]: ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  initializeAutoComplete() {\r\n\r\n    this.mapsAPILoader.load().then(() => {\r\n      this.geoCoder = new google.maps.Geocoder();\r\n      let autocomplete = new google.maps.places.Autocomplete(\r\n        this.searchElementRef.nativeElement\r\n      );\r\n      autocomplete.addListener('place_changed', () => {\r\n        this.ngZone.run(() => {\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          //verify result\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n          this.searchForm\r\n            .get(SEARCH_FROM_METADATA.searchBar)\r\n            .patchValue(place.formatted_address);\r\n\r\n          this.currentLocation = {\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng(),\r\n          };\r\n\r\n\r\n          for (var i = 0; i < place.address_components.length; i++) {\r\n\r\n            var addressType = place.address_components[i].types[0];\r\n            if (this.componentForm[addressType]) {\r\n              var val = place.address_components[i][this.componentForm[addressType]];\r\n\r\n              if (addressType == 'street_number' || addressType == 'route') {\r\n                this.searchAddress.street_number = this.searchAddress.street_number ? this.searchAddress.street_number + ' ' + val :\r\n                  val;\r\n              }\r\n              else if (addressType == 'locality') {\r\n                // address.locality=address+','+val;\r\n                this.searchAddress.locality = val;\r\n              }\r\n              else if (addressType == 'administrative_area_level_1') {\r\n                // address=address+','+val;\r\n                this.searchAddress.administrative_area_level_1 = val;\r\n              }\r\n\r\n              else if (addressType == 'country') {\r\n                // address.country=address+','+val;\r\n                this.searchAddress.country = val;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.searchForm.valid) {\r\n            this.search();\r\n          }\r\n\r\n\r\n        });\r\n      });\r\n      // this function calls assignAddressInternally\r\n      this.getCurrentPosition();\r\n    });\r\n  }\r\n\r\n  searchAddress: any = {};\r\n\r\n  assignAddress(formatedAddress: any) {\r\n\r\n    // this.searchAddress = formatedAddress;\r\n\r\n    // let searchAddress: string;\r\n\r\n    // if (formatedAddress.street_number) {\r\n    //   searchAddress = formatedAddress.street_number;\r\n    // }\r\n    // if (formatedAddress.locality) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.locality;\r\n    // }\r\n    // if (formatedAddress.administrative_area_level_1) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.administrative_area_level_1;\r\n    // }\r\n    // if (formatedAddress.country) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.country;\r\n    // }\r\n\r\n    // this.searchForm\r\n    //   .get(SEARCH_FROM_METADATA.searchBar)\r\n    //   .patchValue(formatedAddress);\r\n  }\r\n\r\n\r\n  changeSearchMode(mode) {\r\n\r\n    if (mode == Mode.Boat || mode == Mode.Seaplane) {\r\n      this.displayLength = true;\r\n      this.modePlaceholder = mode;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).setValidators(Validators.required);\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n\r\n    } else {\r\n      this.displayLength = false;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).clearValidators();\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n    }\r\n\r\n  }\r\n\r\n  // isSelected(mode) {\r\n  //   if (mode == this.selectedMode) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  // onSearchChange(e) {\r\n  // debugger\r\n  // keyword = 'new'\r\n  // e.target.value = this.searchResults;\r\n  // }\r\n\r\n  search() {\r\n\r\n    this.searchService.searchText = this.searchForm.get(\r\n      SEARCH_FROM_METADATA.searchBar\r\n    ).value;\r\n\r\n    if (this.currentLocation && this.currentLocation.lat) {\r\n      const vehicleLength = this.searchForm.get(\r\n        SEARCH_FROM_METADATA.vehicleLength\r\n      ).value;\r\n\r\n      let search: any = {};\r\n      search.lat = this.currentLocation.lat;\r\n      search.lng = this.currentLocation.lng;\r\n      search.mode = this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).value;\r\n      if (this.searchAddress.street_number)\r\n        search.street = this.searchAddress.street_number;\r\n      if (this.searchAddress.locality)\r\n        search.locality = this.searchAddress.locality;\r\n      search.search = this.searchService.searchText;\r\n\r\n      if (vehicleLength) {\r\n        search.vehiclelength = vehicleLength;\r\n        this.router.navigate(['/search', search]);\r\n\r\n      } else {\r\n        this.router.navigate(['/search', search]);\r\n      }\r\n    } else {\r\n      this.router.navigateByUrl(`/search`);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"city-park-wrapper\">\r\n  <app-nav-bar-new></app-nav-bar-new>\r\n  <div class=\"container\">\r\n    <div class=\"head-container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"search-container\">\r\n          <div class=\"font-poponis search-engine-heading\">BOAT PARKING</div>\r\n          <p class=\"mb-md-5 text-center f18\" style=\"color: #4919db;\">\r\n          Find Parking For Anything You Need To Tow\r\n        </p>\r\n        <div class=\"form-group mb-0\" [formGroup]=\"searchForm\" accept-charset=\"UTF-8\" method=\"get\">\r\n          <div class=\"input-group w-100\">\r\n            <!-- <span class=\"input-group-btn col-3 px-1  mx-0\">\r\n              <select id=\"select-control\" [formControlName]=\"SEARCH_FROM_METADATA.vehicleCategory\"\r\n                (change)=\"changeSearchMode($event.target.value)\" class=\"form-control form-control-lg rounded\"\r\n                name=\"args\">\r\n                <option disabled [value]=\"null\">Type of Parking</option>\r\n                <option *ngFor=\"let vehicleCategory of Mode | keyvalue\" [value]=\"vehicleCategory.value\">\r\n                  {{vehicleCategory.key}}</option>\r\n              </select>\r\n            </span> -->\r\n            <span class=\"input-group-btn col-md col-sm-10 col-12 px-1 mx-md-0 mx-auto mb-md-0 mb-2\">\r\n              <input #searchBar type=\"text\" name=\"search\" id=\"search\" [formControlName]=\"SEARCH_FROM_METADATA.searchBar\"\r\n                placeholder=\"Search by Location or Address\" type=\"text\" class=\"form-control form-control-lg rounded\"\r\n                name=\"search-text\">\r\n            </span>\r\n            <span class=\"input-group-btn col-md-3 col-sm-6 col-12 px-1  mx-md-0 mx-auto mb-md-0 mb-2\">\r\n              <input type=\"text\" name=\"boat_length\" id=\"boat_length\" value=\"\"\r\n                [formControlName]=\"SEARCH_FROM_METADATA.vehicleLength\" numbersOnly\r\n                placeholder=\"{{ modePlaceholder }} length in ft\" class=\"form-control form-control-lg\" />\r\n            </span>\r\n            <span class=\"input-group-btn col-auto px-1 mx-md-0 mx-auto\">\r\n              <button data-disable-with=\"Search\" name=\"commit\" [disabled]=\"searchForm.invalid\" (click)=\"search()\"\r\n                id=\"searchbtn\" type=\"submit\" class=\"form-control rounded btn btn-search px-5 py-3\">\r\n                Search\r\n              </button> </span>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"image-wrapper\">\r\n    <img src=\"/assets/images/bg-car-couple.png\" />\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MapsAPILoader, MouseEvent } from '@agm/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SearchService } from 'src/app/shared/search.service';\r\nimport { SearchBaseComponent } from 'src/app/search/search-page/search-base.component';\r\nimport { PlacesService } from 'src/app/shared/places.service';\r\nimport { Mode, SEARCH_FROM_METADATA } from '../main/main.component.metadata';\r\n\r\n@Component({\r\n  selector: 'app-city-park',\r\n  templateUrl: './city-park.component.html',\r\n  styleUrls: ['./city-park.component.scss']\r\n})\r\nexport class CityParkComponent extends SearchBaseComponent\r\n  implements OnInit, AfterViewInit {\r\n  displayLength;\r\n  modePlaceholder;\r\n  // vehicleLength\r\n  Mode = Mode;\r\n  // autocomplete;\r\n  // geoCoder;\r\n  // searchResult;\r\n  searchForm: FormGroup;\r\n  SEARCH_FROM_METADATA = SEARCH_FROM_METADATA;\r\n\r\n  @ViewChild('searchBar')\r\n  public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private http: HttpClient,\r\n    protected mapsAPILoader: MapsAPILoader,\r\n    private formBuilder: FormBuilder,\r\n    private searchService: SearchService,\r\n    private ngZone: NgZone,\r\n    private placeService: PlacesService\r\n  ) {\r\n    super(mapsAPILoader);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).setValue(Mode.City_Parking);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initializeAutoComplete();\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.formBuilder.group({\r\n      [SEARCH_FROM_METADATA.searchBar]: ['', [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleCategory]: [null, [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleLength]: ['']\r\n    });\r\n  }\r\n\r\n  initializeAutoComplete() {\r\n\r\n    this.mapsAPILoader.load().then(() => {\r\n      this.geoCoder = new google.maps.Geocoder();\r\n      let autocomplete = new google.maps.places.Autocomplete(\r\n        this.searchElementRef.nativeElement\r\n      );\r\n      autocomplete.addListener('place_changed', () => {\r\n        this.ngZone.run(() => {\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          //verify result\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n          this.searchForm\r\n            .get(SEARCH_FROM_METADATA.searchBar)\r\n            .patchValue(place.formatted_address);\r\n\r\n          this.currentLocation = {\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng(),\r\n          };\r\n\r\n\r\n          for (var i = 0; i < place.address_components.length; i++) {\r\n\r\n            var addressType = place.address_components[i].types[0];\r\n            if (this.componentForm[addressType]) {\r\n              var val = place.address_components[i][this.componentForm[addressType]];\r\n\r\n              if (addressType == 'street_number' || addressType == 'route') {\r\n                this.searchAddress.street_number = this.searchAddress.street_number ? this.searchAddress.street_number + ' ' + val :\r\n                  val;\r\n              }\r\n              else if (addressType == 'locality') {\r\n                // address.locality=address+','+val;\r\n                this.searchAddress.locality = val;\r\n              }\r\n              else if (addressType == 'administrative_area_level_1') {\r\n                // address=address+','+val;\r\n                this.searchAddress.administrative_area_level_1 = val;\r\n              }\r\n\r\n              else if (addressType == 'country') {\r\n                // address.country=address+','+val;\r\n                this.searchAddress.country = val;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.searchForm.valid) {\r\n            this.search();\r\n          }\r\n\r\n\r\n        });\r\n      });\r\n      // this function calls assignAddressInternally\r\n      this.getCurrentPosition();\r\n    });\r\n  }\r\n\r\n  searchAddress: any = {};\r\n\r\n  assignAddress(formatedAddress: any) {\r\n\r\n    // this.searchAddress = formatedAddress;\r\n\r\n    // let searchAddress: string;\r\n\r\n    // if (formatedAddress.street_number) {\r\n    //   searchAddress = formatedAddress.street_number;\r\n    // }\r\n    // if (formatedAddress.locality) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.locality;\r\n    // }\r\n    // if (formatedAddress.administrative_area_level_1) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.administrative_area_level_1;\r\n    // }\r\n    // if (formatedAddress.country) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.country;\r\n    // }\r\n\r\n    // this.searchForm\r\n    //   .get(SEARCH_FROM_METADATA.searchBar)\r\n    //   .patchValue(formatedAddress);\r\n  }\r\n\r\n\r\n  changeSearchMode(mode) {\r\n\r\n    if (mode == Mode.Boat || mode == Mode.Seaplane) {\r\n      this.displayLength = true;\r\n      this.modePlaceholder = mode;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).setValidators(Validators.required);\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n\r\n    } else {\r\n      this.displayLength = false;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).clearValidators();\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n    }\r\n\r\n  }\r\n\r\n  // isSelected(mode) {\r\n  //   if (mode == this.selectedMode) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  // onSearchChange(e) {\r\n  // debugger\r\n  // keyword = 'new'\r\n  // e.target.value = this.searchResults;\r\n  // }\r\n\r\n  search() {\r\n\r\n    this.searchService.searchText = this.searchForm.get(\r\n      SEARCH_FROM_METADATA.searchBar\r\n    ).value;\r\n\r\n    if (this.currentLocation && this.currentLocation.lat) {\r\n      const vehicleLength = this.searchForm.get(\r\n        SEARCH_FROM_METADATA.vehicleLength\r\n      ).value;\r\n\r\n      let search: any = {};\r\n      search.lat = this.currentLocation.lat;\r\n      search.lng = this.currentLocation.lng;\r\n      search.mode = this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).value;\r\n      if (this.searchAddress.street_number)\r\n        search.street = this.searchAddress.street_number;\r\n      if (this.searchAddress.locality)\r\n        search.locality = this.searchAddress.locality;\r\n      search.search = this.searchService.searchText;\r\n\r\n      if (vehicleLength) {\r\n        search.vehiclelength = vehicleLength;\r\n        this.router.navigate(['/search', search]);\r\n\r\n      } else {\r\n        this.router.navigate(['/search', search]);\r\n      }\r\n    } else {\r\n      this.router.navigateByUrl(`/search`);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"city-park-wrapper\">\r\n  <app-nav-bar-new></app-nav-bar-new>\r\n  <div class=\"container\">\r\n    <div class=\"head-container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"search-container\">\r\n          <div class=\"font-poponis search-engine-heading\">\r\n          CITY PARKING\r\n          </div>\r\n        <p class=\"mb-md-5 text-center f18\" style=\"color: #4919db;\" >\r\n          Find Local Parking For Travel, Events, & More\r\n        </p>\r\n        <div class=\"form-group mb-0\" [formGroup]=\"searchForm\" accept-charset=\"UTF-8\" method=\"get\">\r\n          <div class=\"input-group w-100\">\r\n            <!-- <span class=\"input-group-btn col-3 px-1  mx-0\">\r\n              <select id=\"select-control\" [formControlName]=\"SEARCH_FROM_METADATA.vehicleCategory\"\r\n                (change)=\"changeSearchMode($event.target.value)\" class=\"form-control form-control-lg rounded\"\r\n                name=\"args\">\r\n                <option disabled [value]=\"null\">Type of Parking</option>\r\n                <option *ngFor=\"let vehicleCategory of Mode | keyvalue\" [value]=\"vehicleCategory.value\">\r\n                  {{vehicleCategory.key}}</option>\r\n              </select>\r\n            </span> -->\r\n            <span class=\"input-group-btn col-sm-12 col-md-9 px-1 mx-0  mb-md-0 mb-2\">\r\n              <input #searchBar type=\"text\" name=\"search\" id=\"search\" [formControlName]=\"SEARCH_FROM_METADATA.searchBar\"\r\n                placeholder=\"Search by Location or Address\" type=\"text\" class=\"form-control form-control-lg rounded\"\r\n                name=\"search-text\">\r\n            </span>\r\n            <span *ngIf=\"displayLength\" style=\"max-width: 170px;\" class=\"col-auto mx-0 px-1\">\r\n              <input type=\"text\" name=\"boat_length\" id=\"boat_length\" value=\"\"\r\n                [formControlName]=\"SEARCH_FROM_METADATA.vehicleLength\" numbersOnly\r\n                placeholder=\"{{ modePlaceholder }} length in ft\" class=\"form-control form-control-lg\" />\r\n            </span>\r\n            <span class=\"input-group-btn col-auto px-1 mx-md-0 mx-auto\">\r\n              <button data-disable-with=\"Search\" name=\"commit\" [disabled]=\"searchForm.invalid\" (click)=\"search()\"\r\n                id=\"searchbtn\" type=\"submit\" class=\"form-control rounded btn btn-search px-5 py-3\">\r\n                Search\r\n              </button> </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <div class=\"image-wrapper\">\r\n    <img src=\"/assets/images/bg-car-couple.png\" />\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MapsAPILoader, MouseEvent } from '@agm/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SearchService } from 'src/app/shared/search.service';\r\nimport { SearchBaseComponent } from 'src/app/search/search-page/search-base.component';\r\nimport { PlacesService } from 'src/app/shared/places.service';\r\nimport { Mode, SEARCH_FROM_METADATA } from '../main/main.component.metadata';\r\n\r\n@Component({\r\n  selector: 'app-helicopter',\r\n  templateUrl: './helicopter.component.html',\r\n  styleUrls: ['./helicopter.component.scss']\r\n})\r\nexport class HelicopterComponent extends SearchBaseComponent\r\n  implements OnInit, AfterViewInit {\r\n\r\n  displayLength;\r\n  modePlaceholder;\r\n  // vehicleLength\r\n  Mode = Mode;\r\n  // autocomplete;\r\n  // geoCoder;\r\n  // searchResult;\r\n  searchForm: FormGroup;\r\n  SEARCH_FROM_METADATA = SEARCH_FROM_METADATA;\r\n\r\n  @ViewChild('searchBar')\r\n  public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private http: HttpClient,\r\n    protected mapsAPILoader: MapsAPILoader,\r\n    private formBuilder: FormBuilder,\r\n    private searchService: SearchService,\r\n    private ngZone: NgZone,\r\n    private placeService: PlacesService\r\n  ) {\r\n    super(mapsAPILoader);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).setValue(Mode.Helicopter);\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initializeAutoComplete();\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.formBuilder.group({\r\n      [SEARCH_FROM_METADATA.searchBar]: ['', [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleCategory]: [null, [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleLength]: ['']\r\n    });\r\n  }\r\n\r\n  initializeAutoComplete() {\r\n\r\n    this.mapsAPILoader.load().then(() => {\r\n      this.geoCoder = new google.maps.Geocoder();\r\n      let autocomplete = new google.maps.places.Autocomplete(\r\n        this.searchElementRef.nativeElement\r\n      );\r\n      autocomplete.addListener('place_changed', () => {\r\n        this.ngZone.run(() => {\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          //verify result\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n          this.searchForm\r\n            .get(SEARCH_FROM_METADATA.searchBar)\r\n            .patchValue(place.formatted_address);\r\n\r\n          this.currentLocation = {\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng(),\r\n          };\r\n\r\n\r\n          for (var i = 0; i < place.address_components.length; i++) {\r\n\r\n            var addressType = place.address_components[i].types[0];\r\n            if (this.componentForm[addressType]) {\r\n              var val = place.address_components[i][this.componentForm[addressType]];\r\n\r\n              if (addressType == 'street_number' || addressType == 'route') {\r\n                this.searchAddress.street_number = this.searchAddress.street_number ? this.searchAddress.street_number + ' ' + val :\r\n                  val;\r\n              }\r\n              else if (addressType == 'locality') {\r\n                // address.locality=address+','+val;\r\n                this.searchAddress.locality = val;\r\n              }\r\n              else if (addressType == 'administrative_area_level_1') {\r\n                // address=address+','+val;\r\n                this.searchAddress.administrative_area_level_1 = val;\r\n              }\r\n\r\n              else if (addressType == 'country') {\r\n                // address.country=address+','+val;\r\n                this.searchAddress.country = val;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.searchForm.valid) {\r\n            this.search();\r\n          }\r\n\r\n\r\n        });\r\n      });\r\n      // this function calls assignAddressInternally\r\n      this.getCurrentPosition();\r\n    });\r\n  }\r\n\r\n  searchAddress: any = {};\r\n\r\n  assignAddress(formatedAddress: any) {\r\n\r\n    // this.searchAddress = formatedAddress;\r\n\r\n    // let searchAddress: string;\r\n\r\n    // if (formatedAddress.street_number) {\r\n    //   searchAddress = formatedAddress.street_number;\r\n    // }\r\n    // if (formatedAddress.locality) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.locality;\r\n    // }\r\n    // if (formatedAddress.administrative_area_level_1) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.administrative_area_level_1;\r\n    // }\r\n    // if (formatedAddress.country) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.country;\r\n    // }\r\n\r\n    // this.searchForm\r\n    //   .get(SEARCH_FROM_METADATA.searchBar)\r\n    //   .patchValue(formatedAddress);\r\n  }\r\n\r\n\r\n  changeSearchMode(mode) {\r\n\r\n    if (mode == Mode.Boat || mode == Mode.Seaplane) {\r\n      this.displayLength = true;\r\n      this.modePlaceholder = mode;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).setValidators(Validators.required);\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n\r\n    } else {\r\n      this.displayLength = false;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).clearValidators();\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n    }\r\n\r\n  }\r\n\r\n  // isSelected(mode) {\r\n  //   if (mode == this.selectedMode) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  // onSearchChange(e) {\r\n  // debugger\r\n  // keyword = 'new'\r\n  // e.target.value = this.searchResults;\r\n  // }\r\n\r\n  search() {\r\n\r\n    this.searchService.searchText = this.searchForm.get(\r\n      SEARCH_FROM_METADATA.searchBar\r\n    ).value;\r\n\r\n    if (this.currentLocation && this.currentLocation.lat) {\r\n      const vehicleLength = this.searchForm.get(\r\n        SEARCH_FROM_METADATA.vehicleLength\r\n      ).value;\r\n\r\n      let search: any = {};\r\n      search.lat = this.currentLocation.lat;\r\n      search.lng = this.currentLocation.lng;\r\n      search.mode = this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).value;\r\n      if (this.searchAddress.street_number)\r\n        search.street = this.searchAddress.street_number;\r\n      if (this.searchAddress.locality)\r\n        search.locality = this.searchAddress.locality;\r\n      search.search = this.searchService.searchText;\r\n\r\n      if (vehicleLength) {\r\n        search.vehiclelength = vehicleLength;\r\n        this.router.navigate(['/search', search]);\r\n\r\n      } else {\r\n        this.router.navigate(['/search', search]);\r\n      }\r\n    } else {\r\n      this.router.navigateByUrl(`/search`);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"city-park-wrapper\">\r\n  <app-nav-bar-new></app-nav-bar-new>\r\n  <div class=\"container\">\r\n    <div class=\"head-container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"search-container\">\r\n        <div class=\"font-poponis search-engine-heading\">HELICOPTER PARKING</div>\r\n        <p class=\"mb-md-5 text-center f18\" style=\"color: #4919db;\">\r\n          Find Parking For Anything You Need To Tow\r\n        </p>\r\n        <div class=\"form-group mb-0\" [formGroup]=\"searchForm\" accept-charset=\"UTF-8\" method=\"get\">\r\n          <div class=\"input-group w-100\">\r\n            <!-- <span class=\"input-group-btn col-3 px-1  mx-0\">\r\n              <select id=\"select-control\" [formControlName]=\"SEARCH_FROM_METADATA.vehicleCategory\"\r\n                (change)=\"changeSearchMode($event.target.value)\" class=\"form-control form-control-lg rounded\"\r\n                name=\"args\">\r\n                <option disabled [value]=\"null\">Type of Parking</option>\r\n                <option *ngFor=\"let vehicleCategory of Mode | keyvalue\" [value]=\"vehicleCategory.value\">\r\n                  {{vehicleCategory.key}}</option>\r\n              </select>\r\n            </span> -->\r\n            <span class=\"input-group-btn col-sm-12 col-md-9 px-1 mx-0  mb-md-0 mb-2\">\r\n              <input #searchBar type=\"text\" name=\"search\" id=\"search\" [formControlName]=\"SEARCH_FROM_METADATA.searchBar\"\r\n                placeholder=\"Search by Location or Address\" type=\"text\" class=\"form-control form-control-lg rounded\"\r\n                name=\"search-text\">\r\n            </span>\r\n            <span *ngIf=\"displayLength\" style=\"max-width: 170px;\" class=\"col-auto mx-0 px-1\">\r\n              <input type=\"text\" name=\"boat_length\" id=\"boat_length\" value=\"\"\r\n                [formControlName]=\"SEARCH_FROM_METADATA.vehicleLength\" numbersOnly\r\n                placeholder=\"{{ modePlaceholder }} length in ft\" class=\"form-control form-control-lg\" />\r\n            </span>\r\n            <span class=\"input-group-btn col-auto px-1 mx-md-0 mx-auto\">\r\n              <button data-disable-with=\"Search\" name=\"commit\" [disabled]=\"searchForm.invalid\" (click)=\"search()\"\r\n                id=\"searchbtn\" type=\"submit\" class=\"form-control rounded btn btn-search px-5 py-3\">\r\n                Search\r\n              </button> </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"image-wrapper\">\r\n    <img src=\"/assets/images/bg-car-couple.png\" />\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>","export const SEARCH_FROM_METADATA = {\r\n  vehicleCategory: 'vehicleCategory',\r\n  searchBar: 'searchBar',\r\n  vehicleLength: 'vehicleLength',\r\n};\r\n\r\nexport enum Mode {\r\n  City_Parking = 'city',\r\n  Airport_Parking = 'airplane',\r\n  Truck_And_Trailer = 'truckandtrailer',\r\n  Boat = 'boat',\r\n  Semi_Truck = 'semitruck',\r\n  Seaplane = 'seaplane',\r\n  Helicopter = 'helicopter'\r\n  \r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MapsAPILoader, MouseEvent } from '@agm/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SearchService } from 'src/app/shared/search.service';\r\nimport { SearchBaseComponent } from 'src/app/search/search-page/search-base.component';\r\nimport { PlacesService } from 'src/app/shared/places.service';\r\nimport { Mode, SEARCH_FROM_METADATA } from '../main/main.component.metadata';\r\n\r\n@Component({\r\n  selector: 'app-sea-plane',\r\n  templateUrl: './sea-plane.component.html',\r\n  styleUrls: ['./sea-plane.component.scss']\r\n})\r\nexport class SeaPlaneComponent extends SearchBaseComponent\r\n  implements OnInit, AfterViewInit {\r\n\r\n  displayLength;\r\n  modePlaceholder;\r\n  // vehicleLength\r\n  Mode = Mode;\r\n  // autocomplete;\r\n  // geoCoder;\r\n  // searchResult;\r\n  searchForm: FormGroup;\r\n  SEARCH_FROM_METADATA = SEARCH_FROM_METADATA;\r\n\r\n  @ViewChild('searchBar')\r\n  public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private http: HttpClient,\r\n    protected mapsAPILoader: MapsAPILoader,\r\n    private formBuilder: FormBuilder,\r\n    private searchService: SearchService,\r\n    private ngZone: NgZone,\r\n    private placeService: PlacesService\r\n  ) {\r\n    super(mapsAPILoader);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).setValue(Mode.Seaplane);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initializeAutoComplete();\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.formBuilder.group({\r\n      [SEARCH_FROM_METADATA.searchBar]: ['', [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleCategory]: [null, [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleLength]: ['']\r\n    });\r\n  }\r\n\r\n  initializeAutoComplete() {\r\n\r\n    this.mapsAPILoader.load().then(() => {\r\n      this.geoCoder = new google.maps.Geocoder();\r\n      let autocomplete = new google.maps.places.Autocomplete(\r\n        this.searchElementRef.nativeElement\r\n      );\r\n      autocomplete.addListener('place_changed', () => {\r\n        this.ngZone.run(() => {\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          //verify result\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n          this.searchForm\r\n            .get(SEARCH_FROM_METADATA.searchBar)\r\n            .patchValue(place.formatted_address);\r\n\r\n          this.currentLocation = {\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng(),\r\n          };\r\n\r\n\r\n          for (var i = 0; i < place.address_components.length; i++) {\r\n\r\n            var addressType = place.address_components[i].types[0];\r\n            if (this.componentForm[addressType]) {\r\n              var val = place.address_components[i][this.componentForm[addressType]];\r\n\r\n              if (addressType == 'street_number' || addressType == 'route') {\r\n                this.searchAddress.street_number = this.searchAddress.street_number ? this.searchAddress.street_number + ' ' + val :\r\n                  val;\r\n              }\r\n              else if (addressType == 'locality') {\r\n                // address.locality=address+','+val;\r\n                this.searchAddress.locality = val;\r\n              }\r\n              else if (addressType == 'administrative_area_level_1') {\r\n                // address=address+','+val;\r\n                this.searchAddress.administrative_area_level_1 = val;\r\n              }\r\n\r\n              else if (addressType == 'country') {\r\n                // address.country=address+','+val;\r\n                this.searchAddress.country = val;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.searchForm.valid) {\r\n            this.search();\r\n          }\r\n\r\n\r\n        });\r\n      });\r\n      // this function calls assignAddressInternally\r\n      this.getCurrentPosition();\r\n    });\r\n  }\r\n\r\n  searchAddress: any = {};\r\n\r\n  assignAddress(formatedAddress: any) {\r\n\r\n    // this.searchAddress = formatedAddress;\r\n\r\n    // let searchAddress: string;\r\n\r\n    // if (formatedAddress.street_number) {\r\n    //   searchAddress = formatedAddress.street_number;\r\n    // }\r\n    // if (formatedAddress.locality) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.locality;\r\n    // }\r\n    // if (formatedAddress.administrative_area_level_1) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.administrative_area_level_1;\r\n    // }\r\n    // if (formatedAddress.country) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.country;\r\n    // }\r\n\r\n    // this.searchForm\r\n    //   .get(SEARCH_FROM_METADATA.searchBar)\r\n    //   .patchValue(formatedAddress);\r\n  }\r\n\r\n\r\n  changeSearchMode(mode) {\r\n\r\n    if (mode == Mode.Boat || mode == Mode.Seaplane) {\r\n      this.displayLength = true;\r\n      this.modePlaceholder = mode;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).setValidators(Validators.required);\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n\r\n    } else {\r\n      this.displayLength = false;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).clearValidators();\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n    }\r\n\r\n  }\r\n\r\n  // isSelected(mode) {\r\n  //   if (mode == this.selectedMode) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  // onSearchChange(e) {\r\n  // debugger\r\n  // keyword = 'new'\r\n  // e.target.value = this.searchResults;\r\n  // }\r\n\r\n  search() {\r\n\r\n    this.searchService.searchText = this.searchForm.get(\r\n      SEARCH_FROM_METADATA.searchBar\r\n    ).value;\r\n\r\n    if (this.currentLocation && this.currentLocation.lat) {\r\n      const vehicleLength = this.searchForm.get(\r\n        SEARCH_FROM_METADATA.vehicleLength\r\n      ).value;\r\n\r\n      let search: any = {};\r\n      search.lat = this.currentLocation.lat;\r\n      search.lng = this.currentLocation.lng;\r\n      search.mode = this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).value;\r\n      if (this.searchAddress.street_number)\r\n        search.street = this.searchAddress.street_number;\r\n      if (this.searchAddress.locality)\r\n        search.locality = this.searchAddress.locality;\r\n      search.search = this.searchService.searchText;\r\n\r\n      if (vehicleLength) {\r\n        search.vehiclelength = vehicleLength;\r\n        this.router.navigate(['/search', search]);\r\n\r\n      } else {\r\n        this.router.navigate(['/search', search]);\r\n      }\r\n    } else {\r\n      this.router.navigateByUrl(`/search`);\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"city-park-wrapper\">\r\n  <app-nav-bar-new></app-nav-bar-new>\r\n  <div class=\"container\">\r\n    <div class=\"head-container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"search-container\">\r\n        <div class=\"font-poponis search-engine-heading\">SEA PLANE PARKING</div>\r\n        <p class=\"mb-md-5 text-center f18\" style=\"color: #4919db;\">\r\n          Find Parking For Anything You Need To Tow\r\n        </p>\r\n        <div class=\"form-group mb-0\" [formGroup]=\"searchForm\" accept-charset=\"UTF-8\" method=\"get\">\r\n          <div class=\"input-group w-100\">\r\n            <!-- <span class=\"input-group-btn col-3 px-1  mx-0\">\r\n              <select id=\"select-control\" [formControlName]=\"SEARCH_FROM_METADATA.vehicleCategory\"\r\n                (change)=\"changeSearchMode($event.target.value)\" class=\"form-control form-control-lg rounded\"\r\n                name=\"args\">\r\n                <option disabled [value]=\"null\">Type of Parking</option>\r\n                <option *ngFor=\"let vehicleCategory of Mode | keyvalue\" [value]=\"vehicleCategory.value\">\r\n                  {{vehicleCategory.key}}</option>\r\n              </select>\r\n            </span> -->\r\n            <span class=\"input-group-btn col-sm-12 col-md-9 px-1 mx-0  mb-md-0 mb-2\">\r\n              <input #searchBar type=\"text\" name=\"search\" id=\"search\" [formControlName]=\"SEARCH_FROM_METADATA.searchBar\"\r\n                placeholder=\"Search by Location or Address\" type=\"text\" class=\"form-control form-control-lg rounded\"\r\n                name=\"search-text\">\r\n            </span>\r\n            <span *ngIf=\"displayLength\" style=\"max-width: 170px;\" class=\"col-auto mx-0 px-1\">\r\n              <input type=\"text\" name=\"boat_length\" id=\"boat_length\" value=\"\"\r\n                [formControlName]=\"SEARCH_FROM_METADATA.vehicleLength\" numbersOnly\r\n                placeholder=\"{{ modePlaceholder }} length in ft\" class=\"form-control form-control-lg\" />\r\n            </span>\r\n            <span class=\"input-group-btn col-auto px-1 mx-md-0 mx-auto\">\r\n              <button data-disable-with=\"Search\" name=\"commit\" [disabled]=\"searchForm.invalid\" (click)=\"search()\"\r\n                id=\"searchbtn\" type=\"submit\" class=\"form-control rounded btn btn-search px-5 py-3\">\r\n                Search\r\n              </button> </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"image-wrapper\">\r\n    <img src=\"/assets/images/bg-car-couple.png\" />\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MapsAPILoader, MouseEvent } from '@agm/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SearchService } from 'src/app/shared/search.service';\r\nimport { SearchBaseComponent } from 'src/app/search/search-page/search-base.component';\r\nimport { PlacesService } from 'src/app/shared/places.service';\r\nimport { Mode, SEARCH_FROM_METADATA } from '../main/main.component.metadata';\r\n\r\n@Component({\r\n  selector: 'app-semi-truck',\r\n  templateUrl: './semi-truck.component.html',\r\n  styleUrls: ['./semi-truck.component.scss']\r\n})\r\nexport class SemiTruckComponent extends SearchBaseComponent\r\nimplements OnInit, AfterViewInit {\r\n\r\n  displayLength;\r\n  modePlaceholder;\r\n  // vehicleLength\r\n  Mode = Mode;\r\n  // autocomplete;\r\n  // geoCoder;\r\n  // searchResult;\r\n  searchForm: FormGroup;\r\n  SEARCH_FROM_METADATA = SEARCH_FROM_METADATA;\r\n\r\n  @ViewChild('searchBar')\r\n  public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private http: HttpClient,\r\n    protected mapsAPILoader: MapsAPILoader,\r\n    private formBuilder: FormBuilder,\r\n    private searchService: SearchService,\r\n    private ngZone: NgZone,\r\n    private placeService: PlacesService\r\n  ) {\r\n    super(mapsAPILoader);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).setValue(Mode.Semi_Truck);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initializeAutoComplete();\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.formBuilder.group({\r\n      [SEARCH_FROM_METADATA.searchBar]: ['', [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleCategory]: [null, [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleLength]: ['']\r\n    });\r\n  }\r\n\r\n  initializeAutoComplete() {\r\n\r\n    this.mapsAPILoader.load().then(() => {\r\n      this.geoCoder = new google.maps.Geocoder();\r\n      let autocomplete = new google.maps.places.Autocomplete(\r\n        this.searchElementRef.nativeElement\r\n      );\r\n      autocomplete.addListener('place_changed', () => {\r\n        this.ngZone.run(() => {\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          //verify result\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n          this.searchForm\r\n            .get(SEARCH_FROM_METADATA.searchBar)\r\n            .patchValue(place.formatted_address);\r\n\r\n          this.currentLocation = {\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng(),\r\n          };\r\n\r\n\r\n          for (var i = 0; i < place.address_components.length; i++) {\r\n\r\n            var addressType = place.address_components[i].types[0];\r\n            if (this.componentForm[addressType]) {\r\n              var val = place.address_components[i][this.componentForm[addressType]];\r\n\r\n              if (addressType == 'street_number' || addressType == 'route') {\r\n                this.searchAddress.street_number = this.searchAddress.street_number ? this.searchAddress.street_number + ' ' + val :\r\n                  val;\r\n              }\r\n              else if (addressType == 'locality') {\r\n                // address.locality=address+','+val;\r\n                this.searchAddress.locality = val;\r\n              }\r\n              else if (addressType == 'administrative_area_level_1') {\r\n                // address=address+','+val;\r\n                this.searchAddress.administrative_area_level_1 = val;\r\n              }\r\n\r\n              else if (addressType == 'country') {\r\n                // address.country=address+','+val;\r\n                this.searchAddress.country = val;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.searchForm.valid) {\r\n            this.search();\r\n          }\r\n\r\n\r\n        });\r\n      });\r\n      // this function calls assignAddressInternally\r\n      this.getCurrentPosition();\r\n    });\r\n  }\r\n\r\n  searchAddress: any = {};\r\n\r\n  assignAddress(formatedAddress: any) {\r\n\r\n    // this.searchAddress = formatedAddress;\r\n\r\n    // let searchAddress: string;\r\n\r\n    // if (formatedAddress.street_number) {\r\n    //   searchAddress = formatedAddress.street_number;\r\n    // }\r\n    // if (formatedAddress.locality) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.locality;\r\n    // }\r\n    // if (formatedAddress.administrative_area_level_1) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.administrative_area_level_1;\r\n    // }\r\n    // if (formatedAddress.country) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.country;\r\n    // }\r\n\r\n    // this.searchForm\r\n    //   .get(SEARCH_FROM_METADATA.searchBar)\r\n    //   .patchValue(formatedAddress);\r\n  }\r\n\r\n\r\n  changeSearchMode(mode) {\r\n\r\n    if (mode == Mode.Boat || mode == Mode.Seaplane) {\r\n      this.displayLength = true;\r\n      this.modePlaceholder = mode;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).setValidators(Validators.required);\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n\r\n    } else {\r\n      this.displayLength = false;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).clearValidators();\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n    }\r\n\r\n  }\r\n\r\n  // isSelected(mode) {\r\n  //   if (mode == this.selectedMode) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  // onSearchChange(e) {\r\n  // debugger\r\n  // keyword = 'new'\r\n  // e.target.value = this.searchResults;\r\n  // }\r\n\r\n  search() {\r\n\r\n    this.searchService.searchText = this.searchForm.get(\r\n      SEARCH_FROM_METADATA.searchBar\r\n    ).value;\r\n\r\n    if (this.currentLocation && this.currentLocation.lat) {\r\n      const vehicleLength = this.searchForm.get(\r\n        SEARCH_FROM_METADATA.vehicleLength\r\n      ).value;\r\n\r\n      let search: any = {};\r\n      search.lat = this.currentLocation.lat;\r\n      search.lng = this.currentLocation.lng;\r\n      search.mode = this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).value;\r\n      if (this.searchAddress.street_number)\r\n        search.street = this.searchAddress.street_number;\r\n      if (this.searchAddress.locality)\r\n        search.locality = this.searchAddress.locality;\r\n      search.search = this.searchService.searchText;\r\n\r\n      if (vehicleLength) {\r\n        search.vehiclelength = vehicleLength;\r\n        this.router.navigate(['/search', search]);\r\n\r\n      } else {\r\n        this.router.navigate(['/search', search]);\r\n      }\r\n    } else {\r\n      this.router.navigateByUrl(`/search`);\r\n    }\r\n\r\n  }\r\n}\r\n","\r\n<div class=\"city-park-wrapper\">\r\n  <app-nav-bar-new></app-nav-bar-new>\r\n  <div class=\"container\">\r\n    <div class=\"head-container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"search-container\">\r\n        <div class=\"font-poponis search-engine-heading\">SEMI TRUCK PARKING</div>\r\n        <p class=\"mb-md-5 text-center f18\" style=\"color: #4919db;\">\r\n          Find Parking For Anything You Need To Tow\r\n        </p>\r\n        <div class=\"form-group mb-0\" [formGroup]=\"searchForm\" accept-charset=\"UTF-8\" method=\"get\">\r\n          <div class=\"input-group w-100\">\r\n            <!-- <span class=\"input-group-btn col-3 px-1  mx-0\">\r\n              <select id=\"select-control\" [formControlName]=\"SEARCH_FROM_METADATA.vehicleCategory\"\r\n                (change)=\"changeSearchMode($event.target.value)\" class=\"form-control form-control-lg rounded\"\r\n                name=\"args\">\r\n                <option disabled [value]=\"null\">Type of Parking</option>\r\n                <option *ngFor=\"let vehicleCategory of Mode | keyvalue\" [value]=\"vehicleCategory.value\">\r\n                  {{vehicleCategory.key}}</option>\r\n              </select>\r\n            </span> -->\r\n            <span class=\"input-group-btn col-sm-12 col-md-9 px-1 mx-0  mb-md-0 mb-2\">\r\n              <input #searchBar type=\"text\" name=\"search\" id=\"search\" [formControlName]=\"SEARCH_FROM_METADATA.searchBar\"\r\n                placeholder=\"Search by Location or Address\" type=\"text\" class=\"form-control form-control-lg rounded\"\r\n                name=\"search-text\">\r\n            </span>\r\n            <span *ngIf=\"displayLength\" style=\"max-width: 170px;\" class=\"col-auto mx-0 px-1\">\r\n              <input type=\"text\" name=\"boat_length\" id=\"boat_length\" value=\"\"\r\n                [formControlName]=\"SEARCH_FROM_METADATA.vehicleLength\" numbersOnly\r\n                placeholder=\"{{ modePlaceholder }} length in ft\" class=\"form-control form-control-lg\" />\r\n            </span>\r\n            <span class=\"input-group-btn col-auto px-1 mx-md-0 mx-auto\">\r\n              <button data-disable-with=\"Search\" name=\"commit\" [disabled]=\"searchForm.invalid\" (click)=\"search()\"\r\n                id=\"searchbtn\" type=\"submit\" class=\"form-control rounded btn btn-search px-5 py-3\">\r\n                Search\r\n              </button> </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"image-wrapper\">\r\n    <img src=\"/assets/images/bg-car-couple.png\" />\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MapsAPILoader, MouseEvent } from '@agm/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SearchService } from 'src/app/shared/search.service';\r\nimport { SearchBaseComponent } from 'src/app/search/search-page/search-base.component';\r\nimport { PlacesService } from 'src/app/shared/places.service';\r\nimport { Mode, SEARCH_FROM_METADATA } from '../main/main.component.metadata';\r\n\r\n@Component({\r\n  selector: 'app-truck-parking',\r\n  templateUrl: './truck-parking.component.html',\r\n  styleUrls: ['./truck-parking.component.scss']\r\n})\r\nexport class TruckParkingComponent  extends SearchBaseComponent\r\nimplements OnInit, AfterViewInit {\r\n\r\n  displayLength;\r\n  modePlaceholder;\r\n  // vehicleLength\r\n  Mode = Mode;\r\n  // autocomplete;\r\n  // geoCoder;\r\n  // searchResult;\r\n  searchForm: FormGroup;\r\n  SEARCH_FROM_METADATA = SEARCH_FROM_METADATA;\r\n\r\n  @ViewChild('searchBar')\r\n  public searchElementRef: ElementRef;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private http: HttpClient,\r\n    protected mapsAPILoader: MapsAPILoader,\r\n    private formBuilder: FormBuilder,\r\n    private searchService: SearchService,\r\n    private ngZone: NgZone,\r\n    private placeService: PlacesService\r\n  ) {\r\n    super(mapsAPILoader);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).setValue(Mode.Truck_And_Trailer);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initializeAutoComplete();\r\n  }\r\n\r\n  createForm() {\r\n    this.searchForm = this.formBuilder.group({\r\n      [SEARCH_FROM_METADATA.searchBar]: ['', [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleCategory]: [null, [Validators.required]],\r\n      [SEARCH_FROM_METADATA.vehicleLength]: ['']\r\n    });\r\n  }\r\n\r\n  initializeAutoComplete() {\r\n\r\n    this.mapsAPILoader.load().then(() => {\r\n      this.geoCoder = new google.maps.Geocoder();\r\n      let autocomplete = new google.maps.places.Autocomplete(\r\n        this.searchElementRef.nativeElement\r\n      );\r\n      autocomplete.addListener('place_changed', () => {\r\n        this.ngZone.run(() => {\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n          //verify result\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n          this.searchForm\r\n            .get(SEARCH_FROM_METADATA.searchBar)\r\n            .patchValue(place.formatted_address);\r\n\r\n          this.currentLocation = {\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng(),\r\n          };\r\n\r\n\r\n          for (var i = 0; i < place.address_components.length; i++) {\r\n\r\n            var addressType = place.address_components[i].types[0];\r\n            if (this.componentForm[addressType]) {\r\n              var val = place.address_components[i][this.componentForm[addressType]];\r\n\r\n              if (addressType == 'street_number' || addressType == 'route') {\r\n                this.searchAddress.street_number = this.searchAddress.street_number ? this.searchAddress.street_number + ' ' + val :\r\n                  val;\r\n              }\r\n              else if (addressType == 'locality') {\r\n                // address.locality=address+','+val;\r\n                this.searchAddress.locality = val;\r\n              }\r\n              else if (addressType == 'administrative_area_level_1') {\r\n                // address=address+','+val;\r\n                this.searchAddress.administrative_area_level_1 = val;\r\n              }\r\n\r\n              else if (addressType == 'country') {\r\n                // address.country=address+','+val;\r\n                this.searchAddress.country = val;\r\n              }\r\n            }\r\n          }\r\n\r\n          if (this.searchForm.valid) {\r\n            this.search();\r\n          }\r\n\r\n\r\n        });\r\n      });\r\n      // this function calls assignAddressInternally\r\n      this.getCurrentPosition();\r\n    });\r\n  }\r\n\r\n  searchAddress: any = {};\r\n\r\n  assignAddress(formatedAddress: any) {\r\n\r\n    // this.searchAddress = formatedAddress;\r\n\r\n    // let searchAddress: string;\r\n\r\n    // if (formatedAddress.street_number) {\r\n    //   searchAddress = formatedAddress.street_number;\r\n    // }\r\n    // if (formatedAddress.locality) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.locality;\r\n    // }\r\n    // if (formatedAddress.administrative_area_level_1) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.administrative_area_level_1;\r\n    // }\r\n    // if (formatedAddress.country) {\r\n    //   searchAddress = searchAddress + \",\" + formatedAddress.country;\r\n    // }\r\n\r\n    // this.searchForm\r\n    //   .get(SEARCH_FROM_METADATA.searchBar)\r\n    //   .patchValue(formatedAddress);\r\n  }\r\n\r\n\r\n  changeSearchMode(mode) {\r\n\r\n    if (mode == Mode.Boat || mode == Mode.Seaplane) {\r\n      this.displayLength = true;\r\n      this.modePlaceholder = mode;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).setValidators(Validators.required);\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n\r\n    } else {\r\n      this.displayLength = false;\r\n\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).clearValidators();\r\n      this.searchForm.get(SEARCH_FROM_METADATA.vehicleLength).updateValueAndValidity();\r\n    }\r\n\r\n  }\r\n\r\n  // isSelected(mode) {\r\n  //   if (mode == this.selectedMode) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  // onSearchChange(e) {\r\n  // debugger\r\n  // keyword = 'new'\r\n  // e.target.value = this.searchResults;\r\n  // }\r\n\r\n  search() {\r\n\r\n    this.searchService.searchText = this.searchForm.get(\r\n      SEARCH_FROM_METADATA.searchBar\r\n    ).value;\r\n\r\n    if (this.currentLocation && this.currentLocation.lat) {\r\n      const vehicleLength = this.searchForm.get(\r\n        SEARCH_FROM_METADATA.vehicleLength\r\n      ).value;\r\n\r\n      let search: any = {};\r\n      search.lat = this.currentLocation.lat;\r\n      search.lng = this.currentLocation.lng;\r\n      search.mode = this.searchForm.get(SEARCH_FROM_METADATA.vehicleCategory).value;\r\n      if (this.searchAddress.street_number)\r\n        search.street = this.searchAddress.street_number;\r\n      if (this.searchAddress.locality)\r\n        search.locality = this.searchAddress.locality;\r\n      search.search = this.searchService.searchText;\r\n\r\n      if (vehicleLength) {\r\n        search.vehiclelength = vehicleLength;\r\n        this.router.navigate(['/search', search]);\r\n\r\n      } else {\r\n        this.router.navigate(['/search', search]);\r\n      }\r\n    } else {\r\n      this.router.navigateByUrl(`/search`);\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"city-park-wrapper\">\r\n  <app-nav-bar-new></app-nav-bar-new>\r\n  <div class=\"container\">\r\n    <div class=\"head-container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"search-container\">\r\n          <div class=\"font-poponis search-engine-heading\">TRUCK & TRAILER PARKING</div>\r\n          <p class=\"mb-md-5 text-center f18\" style=\"color: #4919db;\" >\r\n          Find Parking For Anything You Need To Tow\r\n        </p>\r\n        <div class=\"form-group mb-0\" [formGroup]=\"searchForm\" accept-charset=\"UTF-8\" method=\"get\">\r\n          <div class=\"input-group w-100\">\r\n            <!-- <span class=\"input-group-btn col-3 px-1  mx-0\">\r\n              <select id=\"select-control\" [formControlName]=\"SEARCH_FROM_METADATA.vehicleCategory\"\r\n                (change)=\"changeSearchMode($event.target.value)\" class=\"form-control form-control-lg rounded\"\r\n                name=\"args\">\r\n                <option disabled [value]=\"null\">Type of Parking</option>\r\n                <option *ngFor=\"let vehicleCategory of Mode | keyvalue\" [value]=\"vehicleCategory.value\">\r\n                  {{vehicleCategory.key}}</option>\r\n              </select>\r\n            </span> -->\r\n            <span class=\"input-group-btn col-sm-12 col-md-9 px-1 mx-0  mb-md-0 mb-2\">\r\n              <input #searchBar type=\"text\" name=\"search\" id=\"search\" [formControlName]=\"SEARCH_FROM_METADATA.searchBar\"\r\n                placeholder=\"Search by Location or Address\" type=\"text\" class=\"form-control form-control-lg rounded\"\r\n                name=\"search-text\">\r\n            </span>\r\n            <span *ngIf=\"displayLength\" style=\"max-width: 170px;\" class=\"col-auto mx-0 px-1\">\r\n              <input type=\"text\" name=\"boat_length\" id=\"boat_length\" value=\"\"\r\n                [formControlName]=\"SEARCH_FROM_METADATA.vehicleLength\" numbersOnly\r\n                placeholder=\"{{ modePlaceholder }} length in ft\" class=\"form-control form-control-lg\" />\r\n            </span>\r\n            <span class=\"input-group-btn col-auto px-1 mx-md-0 mx-auto\">\r\n              <button data-disable-with=\"Search\" name=\"commit\" [disabled]=\"searchForm.invalid\" (click)=\"search()\"\r\n                id=\"searchbtn\" type=\"submit\" class=\"form-control rounded btn btn-search px-5 py-3\">\r\n                Search\r\n              </button> </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"image-wrapper\">\r\n    <img src=\"/assets/images/bg-car-couple.png\" />\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>","export class Cart{\r\n    CartID:number;\r\n    UserID:number;\r\n    FromDate:Date;\r\n    ToDate:Date;\r\n    Amount:number;\r\n    PropertyGroupID:number;\r\n    CreatedBy:string;\r\n    ModifiedBy:string;\r\n}","export class EmailConfirm{\r\n    Email:string;\r\n    UserId:string;\r\n    Token:string;\r\n    Password:string;\r\n}","export class ChangePassword{\r\n    Email:string;\r\n    CurrentPassword:string;\r\n    NewPassword:string;  \r\n}","export class ForgetPassword{\r\n    Email:string;\r\n    ReturnUrl:string;\r\n}","export class ResetPassword{\r\n    Email:string;\r\n    Password:string;\r\n    Token:string;\r\n}","export class UserRegister{\r\n    FirstName:string;\r\n    LastName:string;\r\n    Email:string;\r\n    Password:string;\r\n    SubscribeToNewsLetter:boolean;\r\n    IAgree:boolean;\r\n    ReturnUrl:string;\r\n    FromClient:boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { apiRoutes } from 'src/app/shared/routes/apiroutes';\r\nimport { ApiResponse } from 'src/app/model/apiresponse.model';\r\nimport { UserRegister } from 'src/app/model/register/register.model';\r\nimport { EmailConfirm } from 'src/app/model/emailconfirm/emailconfirm.model';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  RegisterUser(userRegister:UserRegister):Observable<ApiResponse<string>>{\r\n \r\n    return this.http.post<ApiResponse<string>>(apiRoutes.register.userRegister,userRegister);\r\n  }\r\n  EmailConfirmation(emailConfirm:EmailConfirm):Observable<ApiResponse<string>>{\r\n    return this.http.post<ApiResponse<string>>(apiRoutes.register.emailConfirm,emailConfirm);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MapsAPILoader } from '@agm/core';\r\nimport { IPlace } from './place';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SearchService {\r\n  private _searchText;\r\n  private _selectedPlace: IPlace;\r\n  private _fromDate;\r\n  private _toDate;\r\n\r\n  get searchText() {\r\n    return this._searchText;\r\n  }\r\n\r\n  set searchText(value) {\r\n    this._searchText = value;\r\n  }\r\n\r\n  get selectedPlace() {\r\n    return this._selectedPlace;\r\n  }\r\n\r\n  set selectedPlace(value) {\r\n    this._selectedPlace = value;\r\n  }\r\n\r\n  get fromDate() {\r\n    return this._fromDate;\r\n  }\r\n\r\n  set fromDate(value) {\r\n    this._fromDate = value;\r\n  }\r\n\r\n  get toDate() {\r\n    return this._toDate;\r\n  }\r\n\r\n  set toDate(value) {\r\n    this._toDate = value;\r\n  }\r\n\r\n  constructor() {}\r\n}\r\n"]}